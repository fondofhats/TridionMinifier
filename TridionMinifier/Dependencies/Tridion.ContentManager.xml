<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tridion.ContentManager</name>
    </assembly>
    <members>
        <member name="T:Tridion.ContentManager.AccessDeniedException">
            <summary>
            The exception that is thrown if access is denied.
            </summary>
            <remarks>
            There are two kinds of access denied scenarios. 
            In both cases this exception is thrown, but with different error codes.
            <list type="table">
                <item><term><see cref="F:Tridion.ContentManager.TcmErrorCode.AccessDenied"/></term><description>Attempt to log in with a user which doesn't have access to the system.</description></item>
                <item><term><see cref="F:Tridion.ContentManager.TcmErrorCode.PermissionDenied"/></term><description>Attempt to perform an action for which the user doesn't have permissions.</description></item>
            </list>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.KernelException">
            <summary>
            Base class for exceptions raised by the TCM Kernel.
            </summary>
            <remarks>
            This is not an abstract base class. For some specific kernel errors, specific subclasses are thrown.
            For all other kernel errors, instances of KernelException are thrown and the error code can be used
            to determine the cause of the exception.
            </remarks>
            <seealso cref="T:Tridion.ContentManager.TcmErrorCode"/>
        </member>
        <member name="M:Tridion.ContentManager.KernelException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory)">
            <summary>
            Create a new instance of KernelException.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
        </member>
        <member name="M:Tridion.ContentManager.KernelException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory,System.Exception)">
            <summary>
            Create a new instance of KernelException with an inner exception.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
            <param name="inner">The inner exception</param>
        </member>
        <member name="M:Tridion.ContentManager.KernelException.CreateFromCOMException(System.Runtime.InteropServices.COMException)">
            <summary>
            Convert a COMException raised by the TCM Kernel to an appropriate KernelException, if possible.
            </summary>
            <param name="e">The COMException obtained from the BL</param>
            <returns>An instance of KernelException or of a subclass or the original exception.</returns>
            <remarks>
            Since communication with the BL occurs through COM interop, all errors raised in the BL/DAL
            will enter .NET as COMExceptions with TCM error XML as the exception message.
            This method determines if a COMException represents such a TCM Kernel error and, if so,
            convert it to a KernelException or one of it's subclasses (based on the error code).
            If the COMException does not represent a TCM Kernel error, the original exception is returned.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.AccessDeniedException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory)">
            <summary>
            Create a new instance of AccessDeniedException.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
        </member>
        <member name="T:Tridion.ContentManager.AudienceManagement.Condition">
            <summary>
            Abstract base class for Conditions used in a Target Group definition.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.Condition.#ctor">
            <summary>
            Create a new instance
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.Condition.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance from a given XML element representing the condition.
            </summary>
            <param name="conditionElement">The XML element representing the condition.</param>
            <param name="session">The Session in which to create the object.</param>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.Condition.Negate">
            <summary>
            Get or set whether the condition should be negated.
            </summary>
            <remarks>
            If a condition is negated, it means that it matches if the condition is NOT met.
            For example, a negated TargetGroupCondition matched on people that are NOT in the Target Group.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.AudienceManagement.ConditionOperator">
            <summary>
            Specifies the operator used for comparison
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.ConditionOperator.Equals">
            <summary>Compare if a numerical operand is equal to the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.ConditionOperator.GreaterThan">
            <summary>Compare if a numerical operand is greater than the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.ConditionOperator.LessThan">
            <summary>Compare if a numerical operand is less than the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.ConditionOperator.NotEqual">
            <summary>Compare if a numerical operand is not equal to the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.ConditionOperator.StringEquals">
            <summary>Compare if a string operand is equal to the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.ConditionOperator.Contains">
            <summary>Compare if a string operand contains the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.ConditionOperator.StartsWith">
            <summary>Compare if a string operand starts with the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.ConditionOperator.EndsWith">
            <summary>Compare if a string operand ends with the given condition value.</summary>
        </member>
        <member name="T:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition">
            <summary>
            Represents a condition on a Customer Characteristic (a named value in the user profile).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition.#ctor(System.String,System.Object)">
            <summary>
            Create an instance
            </summary>
            <param name="name">The name of the Customer Characteristic.</param>
            <param name="value">The value to compare the Customer Characteristic's value against.</param>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition.Name">
            <summary>
            Get or set the name of the Customer Characteristic.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition.Value">
            <summary>
            Get or set the value to compare the Customer Characteristic's value against.
            </summary>
            <remarks>
            The type of comparison depends on the <see cref="P:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition.Operator"/>.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition.Operator"/>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition.Operator">
            <summary>
            Get or set the operator used for comparing the Customer Characteristic's value against the <see cref="P:Tridion.ContentManager.AudienceManagement.CustomerCharacteristicCondition.Value"/> specified in the condition.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.AudienceManagement.NumericalConditionOperator">
            <summary>
            Specifies the operator used for comparison of numerical operands
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.NumericalConditionOperator.Equals">
            <summary>Compare if a numerical operand is equal to the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.NumericalConditionOperator.GreaterThan">
            <summary>Compare if a numerical operand is greater than the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.NumericalConditionOperator.LessThan">
            <summary>Compare if a numerical operand is less than the given condition value.</summary>
        </member>
        <member name="F:Tridion.ContentManager.AudienceManagement.NumericalConditionOperator.NotEqual">
            <summary>Compare if a numerical operand is not equal to the given condition value.</summary>
        </member>
        <member name="T:Tridion.ContentManager.AudienceManagement.TargetGroup">
            <summary>
            Represents a Target Group: a definition of an audience based on conditions on their user profiles.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject">
            <summary>
            Abstract base class for repository-local objects: objects that reside in a <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/>.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.IdentifiableObject">
            <summary>
            Abstract base class for all objects that can be identified using a TCM URI (a.k.a. "first class" objects).
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.IdentifiableObject.VersionInfoSection">
            <summary>
            The name of the VersionInfo subsection
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create an instance for a new object.
            </summary>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing object.
            </summary>
            <param name="id">The identifier (TCM URI) of the item.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the object.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags)">
            <summary>
            (Re-)load the state of the object using the given flags.
            </summary>
            <param name="flags">The flags that affect the XML representation of the object.</param>
            <remarks>
            The flags have impact on the result of the ToXml method, 
            but also on properties that expose the XML (e.g. <see cref="P:Tridion.ContentManager.ContentManagement.Component.Content"/>).
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems(Tridion.ContentManager.Filter)">
            <summary>
            Determine if there are items linking to (i.e. "using") this object.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions.
            See the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.Filter)"/> for a description of supported condition.
            </param>
            <returns><c>true</c> if other object which meets the conditions specified in the filter (if any) are linking to this object.</returns>
            <remarks>
            This is an alternative for <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.Filter)"/> or <see cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.Filter)"/> 
            if you are only interested in finding out if there are using items 
            and not which items are using this item. 
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.Filter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of items linking to (i.e. "using") this object.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>ItemType</term><description>Only return items with the given item type(s)</description></item>
                <item><term>OnlyLatestVersions</term><description>Only return items of which the latest version has a reference to this item.</description></item>
                <item><term>InPublication</term><description>Only returns items that reside in the given Publication</description></item>
                <item><term>InclLocalCopies</term><description>Include local copies of the item (if any).</description></item>
            </list>
            </param>
            <returns>A list of objects</returns>
            <remarks>
            This method is part of the "Where Used" functionality. 
            It provides information about all managed relationships in the database,
            but only one level deep: only the items directly related to the given item are returned.
            For example, if a Page inherits its Page Template from its containing StructureGroup, 
            then only the StructureGroup will have a direct relationship with the Page Template (i.e. the StructureGroup is "using" the Page Template).
            GetListUsingItems on the Page Template will only return the StructureGroup and not the Page 
            (which is indirectly also using the Page Template).
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems(Tridion.ContentManager.Filter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.Filter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.Filter)">
            <summary>
            Get an XML list of items linking to (i.e. "using") this object.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListUsingItems).</returns>
            <remarks>
            This method is part of the "Where Used" functionality. 
            It provides information about all managed relationships in the database,
            but only one level deep: only the items directly related to the given item are returned.
            For example, if a Page inherits its Page Template from its containing StructureGroup, 
            then only the StructureGroup will have a direct relationship with the Page Template (i.e. the StructureGroup is "using" the Page Template).
            GetListUsingItems on the Page Template will only return the StructureGroup and not the Page 
            (which is indirectly also using the Page Template).
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.HasUsingItems(Tridion.ContentManager.Filter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems(Tridion.ContentManager.Filter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of items to which this object links (i.e. "used" by this object).
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>ItemType</term><description>Only return items with the given item type(s)</description></item>
                <item><term>InPublication</term><description>Only returns items that reside in the given Publication</description></item>
                <item><term>InclParentItem</term><description>Include the "parent item" of this item (if any). If this item is a local copy, then the "parent item" is the item that this item overrides (as a local copy).</description></item>
            </list>
            </param>
            <returns>A list of objects</returns>
            <remarks>
            This method is part of the "Where Used" functionality. 
            It provides information about all managed relationships in the database,
            but only one level deep: only the items directly related to the given item are returned.
            For example, if a Page inherits its Page Template from its containing StructureGroup, 
            then only the StructureGroup will have a direct relationship with the Page Template (i.e. the StructureGroup is "using" the Page Template).
            GetListUsingItems on the Page Template will only return the StructureGroup and not the Page 
            (which is indirectly also using the Page Template).
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems(Tridion.ContentManager.Filter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsingItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems(Tridion.ContentManager.Filter)">
            <summary>
            Get an XML list of items to which this object links (i.e. "used" by this object).
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListUsedItems).</returns>
            <remarks>
            This method is part of the "Where Used" functionality. 
            It provides information about all managed relationships in the database,
            but only one level deep: only the items directly related to the given item are returned.
            For example, if a Page inherits its Page Template from its containing StructureGroup, 
            then only the StructureGroup will have a direct relationship with the Page Template (i.e. the StructureGroup is "using" the Page Template).
            GetListUsingItems on the Page Template will only return the StructureGroup and not the Page 
            (which is indirectly also using the Page Template).
            </remarks>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems(Tridion.ContentManager.Filter)"/>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsingItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ToXml">
            <summary>
            Get the XML representation of the object.
            </summary>
            <returns>The root element of the XML representation. All sections of the XML representation are included.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ToXml(Tridion.ContentManager.XmlSections)">
            <summary>
            Get a part of the XML representation of the object.
            </summary>
            <param name="sections">
            Specifies which section(s) of the XML to retrieve.
            This can be a combination of values from the enumeration <see cref="T:Tridion.ContentManager.XmlSections"/>
            </param>
            <returns>The root element of the XML representation.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.Equals(System.Object)">
            <summary>
            Object equality test.
            </summary>
            <param name="obj">The object to compare against.</param>
            <returns><c>true</c> if the given object is an IdentifiableObject instance and it has the same Id a this object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetHashCode">
            <summary>
            Get a hash code for the object.
            </summary>
            <returns>The hash code, which is based on the Id.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.ToString">
            <summary>
            Get a string representation for the object.
            </summary>
            <remarks>
            The string representation is shown in a debugger.
            It shouldn't be used for other purposes.
            </remarks>
            <returns>The string representation which includes the type name and Id.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetRootAttribute(System.String)">
            <summary>
            Get an XML attribute on the root element of the XML representation.
            </summary>
            <param name="name">The name of the XML attribute.</param>
            <returns>The XML attribute</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetContextElement(System.String)">
            <summary>
            Get an XML element within the Context section of the XML representation.
            </summary>
            <param name="name">The (local) name of the XML element.</param>
            <returns>The XML element or null if no element with the given name exists.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetInfoElement(System.String,System.String)">
            <summary>
            Get an XML element within the Info section of the XML representation.
            </summary>
            <param name="name">The (local) name of the XML element.</param>
            <param name="sectionName">The name of the subsection within the Info section.</param>
            <returns>The XML element or null if no element with the given name exists.</returns>
            <remarks>
            More specialized methods exists to get info values for common data types: GetInfoXYZ.
            This method should only be used to get info values with complex XML content.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.PropertyExists(System.String)">
            <summary>
            Determine whether the specified property (XML element) exists.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <returns><c>true</c> if the property exists; otherwise, <c>false</c>.</returns>
            <remarks>Properties are represented by XML elements inside the Data section of the XML representation.</remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyElement(System.String,System.Boolean)">
            <summary>
            Get the XML element for a property. 
            </summary>
            <param name="propertyName">The name of the property (corresponds to the local name of the XML element).</param>
            <param name="forWriting">Indicates if the XML element will be used for writing. If <c>true</c>, an XML element will be created in the delta if it didn't exist yet.</param>
            <returns>The XML element.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no element with the given name exists.</exception>
            <remarks>
            More specialized methods exists to get/set property values for common data types: Get/SetPropertyXYZ.
            This method should only be used to get/set properties with complex XML content.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyElement(System.String,System.Boolean,System.Boolean)">
            <summary>
            Get the XML element for a property. 
            </summary>
            <param name="propertyName">The name of the property (corresponds to the local name of the XML element).</param>
            <param name="forWriting">Indicates if the XML element will be used for writing. If <c>true</c>, an XML element will be created in the delta if it didn't exist yet.</param>
            <param name="mustExist">Indicates whether an exception should be thrown if the XML element does not exist.</param>
            <returns>The XML element or null if no element with the given name exists and <c>mustExist=false</c>.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no element with the given name exists and <c>mustExist=true</c></exception>
            <remarks>
            More specialized methods exists to get/set property values for common data types: Get/SetPropertyXYZ.
            This method should only be used to get/set properties with complex XML content.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetInfoString(System.String,System.String)">
            <summary>
            Get an info value as string.
            </summary>
            <param name="name">The (local) name of the info element.</param>
            <param name="sectionName">The name of the info section.</param>
            <returns>The text content of the info element or an empty string if no element with the given name exists.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetInfoBoolean(System.String,System.String)">
            <summary>
            Get an info value as boolean.
            </summary>
            <param name="name">The (local) name of the info element.</param>
            <param name="sectionName">The name of the info section.</param>
            <returns>The text content of the info element as a boolean or <c>false</c> is no element with the given name exists.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetInfoInteger(System.String,System.String)">
            <summary>
            Get an info value as integer.
            </summary>
            <param name="name">The (local) name of the info element.</param>
            <param name="sectionName">The name of the info section.</param>
            <returns>The text content of the info element as an integer or <c>-1</c> is no element with the given name exists.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetInfoDateTime(System.String,System.String)">
            <summary>
            Get an info value as date/time.
            </summary>
            <param name="name">The (local) name of the info element.</param>
            <param name="sectionName">The name of the info section.</param>
            <returns>The text content of the info element as a date/time or <c>DateTime.MinValue</c> is no element with the given name exists.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetInfoObject``1(System.String,System.String)">
            <summary>
            Get an info object reference.
            </summary>
            <typeparam name="T">The type of the referenced object. Must be a type derived from <see cref="T:Tridion.ContentManager.IdentifiableObject"/></typeparam>
            <param name="name">The (local) name of the info element.</param>
            <param name="sectionName">The name of the info section.</param>
            <returns>The object referenced by the xlink:href attribute on the info element or <c>null</c> if no element with the given name exists.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyString(System.String)">
            <summary>
            Get the value of a property as string.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>The property value as a string.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no XML element exists for the property.</exception>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyBoolean(System.String)">
            <summary>
            Get the value of a property as boolean.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>The property value as a boolean.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no XML element exists for the property.</exception>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyInteger(System.String)">
            <summary>
            Get the value of a property as integer.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>The property value as an integer.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no XML element exists for the property.</exception>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyDateTime(System.String)">
            <summary>
            Get the value of a property as date/time.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>The property value as a date/time.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no XML element exists for the property.</exception>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyXml(System.String)">
            <summary>
            Get the value of a property as XML.
            </summary>
            <param name="name">The name of the property.</param>
            <returns>The root element of the property value or <c>null</c> if the property element is empty.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no XML element exists for the property.</exception>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyEnum``1(System.String)">
            <summary>
            Get the value of a property as enumeration member.
            </summary>
            <typeparam name="T">The type of the enumeration.</typeparam>
            <param name="name">The name of the property.</param>
            <returns>The property value as an member of the given enumeration.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no XML element exists for the property.</exception>
            <remarks>
            The XML representation should contain either the symbolic name or the numeric id of the enumeration members.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyObject``1(System.String)">
            <summary>
            Get the value of a property as object.
            </summary>
            <typeparam name="T">The type of the return value. This must be a (subclass of) <see cref="T:Tridion.ContentManager.IdentifiableObject"/>. It may be a superclass of the actual referenced object's class.</typeparam>
            <param name="name">The name of the property.</param>
            <returns>The property value as an object.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no XML element exists for the property.</exception>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetPropertyObjectList``1(System.String,System.String)">
            <summary>
            Get the value of a property as a list of objects.
            </summary>
            <typeparam name="T">The type of the objects in the list. This must be a (subclass of) <see cref="T:Tridion.ContentManager.IdentifiableObject"/>. It may be a superclass of the actual referenced object's class.</typeparam>
            <param name="propertyName">The name of the property.</param>
            <param name="linkElementName">The local name of the XLink child elements</param>
            <returns>The property value as a list of object. This is a "connected collection", i.e. changes to the list are reflected in the state of this object.</returns>
            <exception cref="T:Tridion.ContentManager.KernelException">Is thrown if no XML element exists for the property.</exception>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetProperty(System.String,System.String)">
            <summary>
            Set the value of a string property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The string value. Should not be <c>null</c>.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetProperty(System.String,System.Boolean)">
            <summary>
            Set the value of a boolean property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The boolean value.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetProperty(System.String,System.Int32)">
            <summary>
            Set the value of an integer property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The integer value.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetProperty(System.String,System.DateTime)">
            <summary>
            Set the value of a date/time property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The date/time value.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetProperty(System.String,System.Xml.XmlElement)">
            <summary>
            Set the value of an XML property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The root element of the XML value.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetProperty(System.String,System.Enum)">
            <summary>
            Set the value of an enumerated property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">An enumeration member from any enumeration. The symbolic name is used as value in the XML representation.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetProperty(System.String,Tridion.ContentManager.IdentifiableObject)">
            <summary>
            Set the value of an object reference property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The referenced object. The Id and Title of this object are put as XLink element in the XML representation. May be <c>null</c>.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetTitlePropertyName">
            <summary>
            Get the name of the XML element representing the Title property.
            </summary>
            <returns>The local name of the XML element.</returns>
            <remarks>
            By default this method returns "Title", but this can be overridden in subclasses.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetParentId">
            <summary>
            Get the Id of the parent organizational item of this object.
            </summary>
            <returns>The TCM URI of the parent organizational item.</returns>
            <remarks>
            By default this method returns <c>TcmUri.UriNull</c>, but this can be overridden in subclasses.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetObjectsFromXmlList``1(System.Xml.XmlElement)">
            <summary>
            Get a list of objects from a list of XLink elements.
            </summary>
            <typeparam name="T">The type of the objects in the list. This must be a (subclass of) <see cref="T:Tridion.ContentManager.IdentifiableObject"/>. It may be a superclass of the actual referenced object's class.</typeparam>
            <param name="listElement">The XML element which contains the XLink elements.</param>
            <returns>A list of objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetTitleIfAvailable">
            <summary>
            Get the title of this object if it is available.
            </summary>
            <remarks>
            The title is available if:
            <list type="bullet">
                <item>The object's state has been loaded earlier.</item>
                <item>The title has been pre-loaded (by an earlier call to <see cref="M:Tridion.ContentManager.IdentifiableObject.SetPreLoadedTitle(System.String)"/>).</item>
            </list>
            </remarks>
            <returns>The title or <c>null</c> if no title is available (yet).</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.SetPreLoadedTitle(System.String)">
            <summary>
            Provide a pre-loaded title.
            </summary>
            <param name="title">The pre-loaded title.</param>
            <remarks>
            The pre-loaded title is only set if the object's state has not been loaded yet
            and a pre-loaded title has not been provided earlier.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.WriteXLink(System.Xml.XmlElement)">
            <summary>
            Write a reference to this object as an XLink
            </summary>
            <param name="linkElement">The XML element that will act as XLink element.</param>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetRootElementName">
            <summary>
            Get the XML element name of the root element of the XML representation.
            </summary>
            <returns>The local name of the root element.</returns>
            <remarks>
            By default this is the (unqualified) name of the type, but this can be overridden in subclasses.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.Save">
            <summary>
            Save the state of this object.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetBLClassName">
            <summary>
            Get the BL class name.
            </summary>
            <returns>The class name.</returns>
            <remarks>
            By default, the (unqualified) type name is returned, but this can be overridden in subclasses.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.GetBLObject(System.Boolean)">
            <summary>
            Get the BL object.
            </summary>
            <param name="transactional">Specifies whether transactional BL actions are required.</param>
            <returns>The BL object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.IdentifiableObject.CloneState(Tridion.ContentManager.IdentifiableObject)">
            <summary>
            Clone the state (including Id) of another IdentifiableObject
            </summary>
            <param name="source">The source object to clone the state from.</param>
            <remarks>
            This is used in the VersionedItem.Load implementation to switch to the dynamic version if needed.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.Session">
            <summary>
            Get the Session in which the object was created.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.Id">
            <summary>
            Get the identifier (TCM URI) of the object.
            </summary>
            <remarks>
            Accessing the Id property is an inexpensive operation; it doesn't require loading the object state.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.Title">
            <summary>
            Get or set the title (display name) of the object.
            </summary>
            <remarks>
            If an object is retrieved by traversing a link from another object,
            the Title property is preloaded (it's present in the link).
            In that case, accessing the Title property is an inexpensive operation.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.CreationDate">
            <summary>
            Get the date/time at which the item was created.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.RevisionDate">
            <summary>
            Get the date/time at which the item was last modified.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.LoadFlags">
            <summary>
            Get the flags used when the object was last loaded.
            </summary>
            <seealso cref="M:Tridion.ContentManager.IdentifiableObject.Load(Tridion.ContentManager.LoadFlags)"/>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.UserContext">
            <summary>
            Get the UserContext to be used for BL access.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.IdentifiableObject.IsNew">
            <summary>
            Determine whether the object is new (i.e. not saved yet).
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.IdentifiableObject.ConnectedCollection`1">
            <summary>
            Represents a collection which directly modifies the state of its container if changes are made to the collection.
            </summary>
            <typeparam name="T">The type of the elements in the collection.</typeparam>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.LocationInfoSection">
            <summary>The XML element name of the Location Info section</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.BlueprintInfoSection">
            <summary>The XML element name of the Blueprint Info section</summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new repository-local object.
            </summary>
            <param name="session">The Session in which the RepositoryLocalObject should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OrganizationalItem"/> in which the RepositoryLocalObject should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing repository-local object.
            </summary>
            <param name="id">The identifier (TCM URI) of the RepositoryLocalObject.</param>
            <param name="session">The Session in which the RepositoryLocalObject should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the object.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetUsedKeywords(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of Keywords used by this object.
            </summary>
            <param name="filter">See description of the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems(Tridion.ContentManager.Filter)"/>. The "ItemType" condition is forced to Keyword.</param>
            <returns>A list of Keyword objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetListUsedKeywords(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of Keywords used by this object as XML.
            </summary>
            <param name="filter">See description of the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems(Tridion.ContentManager.Filter)"/>. The "ItemType" condition is forced to Keyword.</param>
            <returns>The root element of the XML list (tcm:ListItems).</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.GetParentId">
            <summary>
            Get the identifier (TCM URI) of the "parent" item: the organizational item that contains this object.
            </summary>
            <returns>a TcmUri object representing the parent item's identifier.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.ContextRepository">
            <summary>
            Get the context Repository: the Repository in which the object has been retrieved.
            </summary>
            <remarks>
            For shared items, the "context Repository" and "owning Repository" will be different.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OwningRepository"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OwningRepository">
            <summary>
            Get the "owning" Repository: the Repository in which the item physically resides.
            </summary>
            <remarks>
            For shared items, the "context Repository" and "owning Repository" will be different.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.ContextRepository"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.OrganizationalItem">
            <summary>
            Get the Organizational Item that contains this object.
            </summary>
            <value>An Organizanal Item object or <c>null</c> if this object is a root Organizational Item.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Path">
            <summary>
            Get the full path to the item (excluding the item's own title).
            </summary>
            <value>A string containing the full path, which is formed by concatenating the organizational item titles, starting at the Publication (separated by backslash characters).</value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.WebDavUrl"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.WebDavUrl">
            <summary>
            Get the WebDAV URL of the item.
            </summary>
            <value>A string containing the WebDAV URL or an empty string if WebDAV is not enabled or the item cannot be exposed through WebDAV.</value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Path"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.IsShared">
            <summary>
            Determine if the item is shared in the current context Publication.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.IsLocalized">
            <summary>
            Determine if the item is localized in the current context Publication.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Creator">
            <summary>
            Get the user who created this object.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.MetadataSchema">
            <summary>
            Get or set the Schema for the (custom) metadata.
            </summary>
            <value>A Schema object (purpose must be <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Metadata"/>) or <c>null</c> if the object has no custom metadata.</value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata">
            <summary>
            Get or set the (custom) metadata as XML.
            </summary>
            <value>
            The root element of the metadata XML or <c>null</c> if there is no custom metadata.
            </value>
            <remarks>
            This property provides low-level access to the metadata XML.
            It is also possible to access the metadata through the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields"/> API.
            </remarks>
            <example>
            To read a single metadata field value with the ItemFields API:
            <code>
            RepositoryLocalObject myObject = (RepositoryLocalObject)mySession.GetObject("tcm:1-3-64");
            ItemFields metadataFields = new ItemFields(myObject.Metadata, myObject.MetadataSchema);
            TextField myTextField = (TextField)metadataFields["MyTextFieldName"];
            string myTextFieldValue = myTextField.Value;
            </code>
            </example>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.MetadataSchema"/>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Target Group.
            </summary>
            <param name="session">The Session in which the Target Group should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> in which the Target Group should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Target Group.
            </summary>
            <param name="id">The identifier (TCM URI) of the Target Group.</param>
            <param name="session">The Session in which the Target Group should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroup.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Schema.</param>
            <param name="session">The Session in which the Schema should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TargetGroup.Description">
            <summary>
            Get or set the description of the Target Group
            </summary>
            <remarks>
            The Description has no special meaning to the system. It can be used to explain
            the purpose of the Target Group to users.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TargetGroup.Conditions">
            <summary>
            Get access to the conditions that define the Target Group
            </summary>
            <value>A list of Condition-derived objects. This is a connected collection: changes to the collection are reflected in the state of the Target Group.</value>
        </member>
        <member name="T:Tridion.ContentManager.AudienceManagement.TargetGroupCondition">
            <summary>
            Represents a condition on "membership" of a Target Group.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TargetGroupCondition.#ctor(Tridion.ContentManager.AudienceManagement.TargetGroup)">
            <summary>
            Create an instance.
            </summary>
            <param name="targetGroup">The Target Group to check "membership" against.</param>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TargetGroupCondition.TargetGroup">
            <summary>
            Get or set the Target Group to check "membership" against.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition">
            <summary>
            Represents a condition on the value of a Tracking Key.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition.#ctor(Tridion.ContentManager.ContentManagement.Keyword)">
            <summary>
            Create an instance.
            </summary>
            <param name="keyword">The Keyword on which the Tracking Key is based.</param>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition.Keyword">
            <summary>
            Get or set the Keyword on which the Tracking Key is based.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition.Value">
            <summary>
            Get or set the value to compare the Tracking Key's value against.
            </summary>
            <remarks>
            The type of comparison depends on the <see cref="P:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition.Operator"/>.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition.Operator"/>
        </member>
        <member name="P:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition.Operator">
            <summary>
            Get or set the operator used for comparing the Tracking Key's value against the <see cref="P:Tridion.ContentManager.AudienceManagement.TrackingKeyCondition.Value"/> specified in the condition.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegions">
            <summary>
            A collection of <see cref="T:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings"/> objects.
            </summary>
            <remarks>
            This corresponds to the "regions" element in the XML configuration file. 
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegions.CreateNewElement">
            <summary>
            Create a new collection item.
            </summary>
            <returns>A new <see cref="T:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings"/> object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegions.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Get the key for a given item.
            </summary>
            <param name="element">The element for which to get the key.</param>
            <returns>An Object that acts as the key for the specified element.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegions.Add(Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings)">
            <summary>
            Add an item to the collection.
            </summary>
            <param name="simpleCacheRegionSettings">The <see cref="T:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings"/> object to add.</param>
        </member>
        <member name="M:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegions.Remove(Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings)">
            <summary>
            Remove an item from the collection.
            </summary>
            <param name="simpleCacheRegionSettings">The <see cref="T:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings"/> object to remove.</param>
        </member>
        <member name="M:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegions.RemoveAt(System.Int32)">
            <summary>
            Remove an the item at the specified index.
            </summary>
            <param name="index">The index of the item to remove.</param>
        </member>
        <member name="P:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegions.CollectionType">
            <summary>
            Get the type of the collection: add/remove/clear map.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegions.Item(System.Int32)">
            <summary>
            Indexer. Get the object at the specified index. 
            </summary>
            <param name="index">The index of the item to get.</param>
            <returns>A <see cref="T:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings"/> object.</returns>
        </member>
        <member name="T:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings">
            <summary>
            Configuration settings for a <see cref="T:Tridion.ContentManager.Caching.SimpleCacheRegion"/>
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings.Name">
            <summary>
            Get or set the name of the cache region.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Caching.Configuration.SimpleCacheRegionSettings.MaxObjects">
            <summary>
            Get or set the maximum number of objects for the cache region.
            </summary>
            <remarks>
            -1 means unlimited.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Caching.Configuration.SimpleCacheSettings">
            <summary>
            Configuration settings for a <see cref="T:Tridion.ContentManager.Caching.SimpleCache"/>.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Caching.Configuration.SimpleCacheSettings.MaxObjects">
            <summary>
            Get or set the maximum number of objects for the entire cache.
            </summary>
            <remarks>
            -1 means unlimited (this is the default value).
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Caching.Configuration.SimpleCacheSettings.DefaultMaxObjectsPerRegion">
            <summary>
            Get or set the default maximum number of objects per region.
            </summary>
            <remarks>
            This setting is used for cache regions which are not explicitly configured.
            -1 means unlimited (this is the default value).
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Caching.Configuration.SimpleCacheSettings.Regions">
            <summary>
            Get the settings for individual cache regions
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Caching.SimpleCache">
            <summary>
            A simple AppDomain-local, in-memory cache implementation.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ICache">
            <summary>
            Interface used to cache objects and obtain objects from the cache.
            </summary>
            <remarks>
            The cache consists of multiple regions identified by a name.
            Each region is basically a dictionary of key/value pairs.
            The idea behind the multiple regions is that each region can have its own retention policy
            (e.g. whether to cache at all, limit on number of objects, expiration time, etc.).
            Concretely, the TOM.NET uses the following cache regions:
            <list type="bullet">
                <item>A separate region for each item type (named after the item type).</item>
                <item>A region for TridionWebSchema representations (named "TridionWebSchema")</item>
                <item>A region for WebDAV URL - TCM URI mappings (named "WebDavUrlMapping")</item>
                <item>A region for Keyword Title - TCM URI mappings (named "KeywordTitleMapping")</item>
            </list>
            </remarks>
            <seealso cref="P:Tridion.ContentManager.Session.Cache"/>
        </member>
        <member name="M:Tridion.ContentManager.ICache.Add(System.String,System.String,System.Object)">
            <summary>
            Add an object to the cache (replace if exists).
            </summary>
            <param name="regionName">The name of the cache region</param>
            <param name="key">The key for the object</param>
            <param name="value">The object to cache</param>
        </member>
        <member name="M:Tridion.ContentManager.ICache.Get(System.String,System.String)">
            <summary>
            Obtain an object from the cache (if available).
            </summary>
            <param name="regionName">The name of the cache region</param>
            <param name="key">The key for the object</param>
            <returns>The cached object or null if no object with the given key is present in the given cache region.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCache.#ctor">
            <summary>
            Constructor. Create a new cache with default settings for MaxObjects and DefaultMaxObjectsPerRegion.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCache.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor. Create a new cache with given MaxObjects and DefaultMaxObjectsPerRegion settings.
            </summary>
            <param name="maxObjects">The maximum number of objects for the entire cache.</param>
            <param name="defaultMaxObjectsPerRegion">The default for the maximum number of object per region.</param>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCache.#ctor(Tridion.ContentManager.Caching.Configuration.SimpleCacheSettings)">
            <summary>
            Constructor. Create a new cache based on given configuration settings.
            </summary>
            <param name="settings">The settings to be used to configure the cache.</param>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCache.Flush">
            <summary>
            Flush all the cache regions.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCache.Add(System.String,System.String,System.Object)">
            <summary>
            Add an object to the cache (replace if exists).
            </summary>
            <param name="regionName">The name of the cache region</param>
            <param name="key">The key for the object</param>
            <param name="value">The object to cache</param>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCache.Get(System.String,System.String)">
            <summary>
            Obtain an object from the cache (if available).
            </summary>
            <param name="regionName">The name of the cache region</param>
            <param name="key">The key for the object</param>
            <returns>The cached object or null if no object with the given key is present in the cache.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCache.ToString">
            <summary>
            Get a string representation for the object.
            </summary>
            <remarks>
            The string representation is shown in a debugger.
            It shouldn't be used for other purposes.
            </remarks>
            <returns>The string representation which contains cache statistics.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCache.DefaultMaxObjectsPerRegion">
            <summary>
            Get or set the default maximum number of objects per region.
            </summary>
            <remarks>
            Cache regions are can be created on-demand when objects are added to the cache.
            These on-demand created cache regions are configured with this default value for the maximum number of objects in that region.
            -1 means unlimited.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCache.MaxObjects">
            <summary>
            Get or set the maximum number of objects for the entire cache.
            </summary>
            <remarks>
            -1 means unlimited.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCache.ObjectCount">
            <summary>
            Get the current number of objects in the cache.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCache.Hits">
            <summary>
            Get the number of cache hits.
            </summary>
            <remarks>
            This is an aggregate of the number of hits for each region.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCache.Misses">
            <summary>
            Get the number of cache misses.
            </summary>
            <remarks>
            This is an aggregate of the number of hits for each region.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCache.Regions">
            <summary>
            Get the cache regions.
            </summary>
            <remarks>
            The keys in the dictionary are the region names.
            Regions can be added and removed using the IDictionary methods.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Caching.SimpleCacheRegion">
            <summary>
            Represents a single region in a SimpleCache.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCacheRegion.#ctor(System.Int32,Tridion.ContentManager.Caching.SimpleCache)">
            <summary>
            Constructor.
            </summary>
            <param name="maxObjects">The maximum number of objects for this region. -1 means unlimited.</param>
            <param name="owner">The <see cref="T:Tridion.ContentManager.Caching.SimpleCache"/> in which the region is created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCacheRegion.Add(System.String,System.Object)">
            <summary>
            Add an object to this cache region (replace if exists).
            </summary>
            <remarks>
            If <see cref="P:Tridion.ContentManager.Caching.SimpleCacheRegion.MaxObjects"/> is zero, nothing will happen (the region doesn't accept any objects).
            If <see cref="P:Tridion.ContentManager.Caching.SimpleCacheRegion.MaxObjects"/> is 1 or more, the object will be added but another object (the oldest)
            may be removed if the region and/or cache has reached the maximum number of objects.
            </remarks>
            <param name="key">The key for the object.</param>
            <param name="value">The object to add to the cache.</param>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCacheRegion.Get(System.String)">
            <summary>
            Obtain an object from this cache region (if available).
            </summary>
            <param name="key">The key for the object</param>
            <returns>The cached object or null if no object with the given key is present in this cache region.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCacheRegion.Flush">
            <summary>
            Flush this cache region (remove all objects).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Caching.SimpleCacheRegion.ToString">
            <summary>
            Get a string representation for the object.
            </summary>
            <remarks>
            The string representation is shown in a debugger.
            It shouldn't be used for other purposes.
            </remarks>
            <returns>The string representation which contains cache region statistics.</returns>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCacheRegion.ObjectCount">
            <summary>
            Get the current number of objects in this cache region.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCacheRegion.Hits">
            <summary>
            Get the number of hits in this cache region.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCacheRegion.Misses">
            <summary>
            Get the number of misses in this cache region.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Caching.SimpleCacheRegion.MaxObjects">
            <summary>
            Get or set the maximum number of objects in this cache region. -1 means unlimited.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.ComponentPresentation">
            <summary>
            Represents a Component Presentation: essentially a combination of a Component and a Component Template.
            </summary>
            <remarks>
            Component Presentations are typically used on a <see cref="T:Tridion.ContentManager.CommunicationManagement.Page"/>, but can also be used stand-alone.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentPresentation.#ctor(Tridion.ContentManager.ContentManagement.Component,Tridion.ContentManager.CommunicationManagement.ComponentTemplate)">
            <summary>
            Create a new instance based on a given Component and Component Template.
            </summary>
            <param name="component">The Component. May not be <c>null</c>.</param>
            <param name="componentTemplate">The Component Template. May not be <c>null</c>.</param>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentPresentation.Component">
            <summary>
            Get or set the Component.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentPresentation.ComponentTemplate">
            <summary>
            Get or set the Component Template.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentPresentation.Conditions">
            <summary>
            Get access to the (Target Group) conditions.
            </summary>
            <value>A list of <see cref="T:Tridion.ContentManager.AudienceManagement.TargetGroupCondition"/> objects. This is a connected collection: changes to the collection are reflected in the state of the Component Presentation.</value>
            <remarks>
            If conditions are specified for a Component Presentation, these are published as TCDL code.
            This TCDL code results in Content Delivery code that only renders the Component Presentation
            if the user falls in the given Target Groups.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.ComponentTemplate">
            <summary>
            Represents a Component Template: a template used to render a Component into a Component Presentation.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.Template">
            <summary>
            Abstract base class for Templates.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.VersionedItem">
            <summary>
            Abstract base class for Versioned Items.
            </summary>
            <remarks>
            Instances of this class represent a specific version of a Versioned Item.
            This version is either explicitly stated in the TCM URI (e.g. tcm:1-2-v3)
            or is implicitly the latest version.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Versioned Item.
            </summary>
            <param name="session">The Session in which the Versioned Item should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/> in which the Versioned Item should be created.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Versioned Item.
            </summary>
            <param name="id">The identifier (TCM URI) of the Versioned Item.</param>
            <param name="session">The Session in which the Versioned Item should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the object.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersions(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of versions of this item.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. Currently, no conditions are supported.
            </param>
            <returns>A list of VersionedItem objects representing the different versions of the item.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetListVersions(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetListVersions(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of versions of this item as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify the attributes to include in the list.
            See the description of the filter parameter of <see cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersions(Tridion.ContentManager.Filter)"/> for the possible conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListVersions).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetVersions(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.GetRollbackComments">
            <summary>
            Get the rollback comments for this version of this item.
            </summary>
            <returns>A tcm:RollbackComments element.</returns>
            <remarks>
            For most item types, it's allowed to delete the item if there are old versions of other items 
            referring to it. In this case, the rollback comments for these old versions will be updated 
            to indicate that the referenced item no longer exists. 
            Before performing a rollback on an item, the rollback comment of the old version are 
            presented to the user.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VersionedItem.Load(Tridion.ContentManager.LoadFlags)">
            <summary>
            (Re-)load the state of the object using the given flags.
            </summary>
            <param name="flags">The flags that affect the XML representation of the object.</param>
            <remarks>
            This method is overridden because for versioned items the dynamic version may be loaded
            instead of the latest version (during rendering, depending on render mode etc.).
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VersionedItem.IsCheckedOut">
            <summary>
            Determine whether the item is checked out.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOutDate">
            <summary>
            Get the date/time at which the item was checked out.
            </summary>
            <value>The date/time at which the item was checked out or <see cref="F:System.DateTime.MinValue"/> if the item is not checked out.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VersionedItem.CheckOutUser">
            <summary>
            Get the user who checked out the item.
            </summary>
            <value>A User object or <c>null</c> if the item is not checked out.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VersionedItem.LockType">
            <summary>
            Get the type of lock on the item (if any).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VersionedItem.Version">
            <summary>
            Get the version number of this (version of this) item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VersionedItem.Revision">
            <summary>
            Get the revision number of this (version of this) item.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VersionedItem.Revisor">
            <summary>
            Get the user who last modified this (version of this) item.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Template.
            </summary>
            <param name="session">The Session in which the Template should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> in which the Template should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Template.
            </summary>
            <param name="id">The identifier (TCM URI) of the Template.</param>
            <param name="session">The Session in which the Template should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the object.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.GetUsedBuildingBlocks(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of Template Building Blocks used by this Template.
            </summary>
            <param name="filter">
            See description of the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetUsedItems(Tridion.ContentManager.Filter)"/>. 
            The "ItemType" condition is forced to TemplateBuildingBlock.
            </param>
            <returns>A list of <see cref="T:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock"/> objects.</returns>
            <seealso cref="M:Tridion.ContentManager.CommunicationManagement.Template.GetListUsedBuildingBlocks(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.GetListUsedBuildingBlocks(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of Template Building Blocks used by this Template as XML.
            </summary>
            <param name="filter">
            See description of the filter parameter of <see cref="M:Tridion.ContentManager.IdentifiableObject.GetListUsedItems(Tridion.ContentManager.Filter)"/>. 
            The "ItemType" condition is forced to TemplateBuildingBlock.
            </param>
            <returns>The root element of the XML list (tcm:ListUsedItems)</returns>
            <seealso cref="M:Tridion.ContentManager.CommunicationManagement.Template.GetUsedBuildingBlocks(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Template.ExpandXsltIncludes(System.Xml.XmlDocument)">
            <summary>
            Expands the &lt;xsl:include href='xxx' /&gt; with its content
            </summary>
            <param name="xslt">The XSLT document to expand the XSLT includes.</param>
            <returns>The expanded element</returns>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Template.TemplateType">
            <summary>
            Get or set the Template Type.
            </summary>
            <value>
            The value must be the name of one of the configured Template Types (see Tridion.ContentManager.config).
            The following values can be used out-of-the box as of 5.3:
            <list type="table">
                <item><term>VBScript</term><description>VBScript template (pre 5.3)</description></item>
                <item><term>JScript</term><description>JScript template (pre 5.3)</description></item>
                <item><term>XSLT</term><description>XSLT template (pre 5.3)</description></item>
                <item><term>CompoundTemplate</term><description>Compound Template (5.3)</description></item>
                <item><term>AssemblyTemplate</term><description>.NET Assembly (5.3)</description></item>
                <item><term>CSharpTemplate</term><description>C# Code Fragment (5.3)</description></item>
                <item><term>DreamweaverTemplate</term><description>Dreamweaver template (5.3)</description></item>
            </list>
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Template.Content">
            <summary>
            Get or set the Template's (text) content.
            </summary>
            <value>A string containing the text content or an empty string if the Template doesn't have text content.</value>
            <remarks>
            Depending on the <see cref="P:Tridion.ContentManager.CommunicationManagement.Template.TemplateType"/>, a Template can have text content, binary content or both.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Template.BinaryContent"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Template.ParameterSchema">
            <summary>
            Get or set the Parameter Schema.
            </summary>
            <value>
            A <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> object (purpose must be <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.TemplateParameters"/>)
            or <c>null</c> if no Parameter Schema is defined.
            </value>
            <remarks>
            A Template can define the parameters it accepts using a Parameter Schema.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Template.BinaryContent">
            <summary>
            Get access to the Template's binary content.
            </summary>
            <value>A <see cref="P:Tridion.ContentManager.CommunicationManagement.Template.BinaryContent"/> object representing the binary content and its properties.</value>
            <remarks>
            Depending on the <see cref="P:Tridion.ContentManager.CommunicationManagement.Template.TemplateType"/>, a Template can have text content, binary content or both.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Template.Content"/>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.IWorkflowItem">
            <summary>
            Interface implemented by items that can be part of a workflow process.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.IWorkflowItem.ApprovalStatus">
            <summary>
            Get or set the Approval Status of the item.
            </summary>
            <value>
            An <see cref="P:Tridion.ContentManager.Workflow.IWorkflowItem.ApprovalStatus"/> object representing the Approval Status of the item 
            or <c>null</c> if the item has not been part of a workflow process.
            </value>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Component Template.
            </summary>
            <param name="session">The Session in which the Component Template should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> in which the Component Template should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Component Template.
            </summary>
            <param name="id">The identifier (TCM URI) of the Component Template.</param>
            <param name="session">The Session in which the Component Template should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Component Template.</param>
            <param name="session">The Session in which the Component Template should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.IsRepositoryPublishable">
            <summary>
            Get or set whether the Component Template renders "dynamic" Component Presentations.
            </summary>
            <value>If <c>true</c>, the Component Template renders "dynamic" Component Presentations.</value>
            <remarks>
            A "dynamic" Component Presentation is published separately instead of being embedded on a Page.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.AllowOnPage"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.AllowOnPage">
            <summary>
            Get or set whether the Component Template may be used on a Page.
            </summary>
            <remarks>
            This setting only applies to Component Templates which render "dynamic" Component Presentations.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.IsRepositoryPublishable"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.DynamicTemplate">
            <summary>
            Get or set the "dynamic" part of the Component Template: an XSLT which is executed on the Content Delivery system.
            </summary>
            <value>A string containing the XSLT or an empty string if not applicable.</value>
            <remarks>
            Only applicable if the <see cref="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.OutputFormat"/> is set to "XML Document".
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Template.Content"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.OutputFormat">
            <summary>
            Get or set the format of the rendered Component Presentation.
            </summary>
            <value>The possible values are currently constrained by the system schema (cm_xml.xsd):
            <list type="bullet">
                <item>HTML</item>
                <item>HTML Fragment</item>
                <item>ASP VBScript</item>
                <item>ASP JScript</item>
                <item>JSP Scripting</item>
                <item>Plain Text</item>
                <item>XML Document</item>
                <item>XML Fragment</item>
                <item>ASCX WebControl</item>
                <item>Other</item>
            </list>
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.Priority">
            <summary>
            Get or set the priority used for resolving Component links.
            </summary>
            <remarks>
            The Priority is used by Content Delivery linking to resolve a Component link:
            if a Component is published on multiple Pages, then a choice has to be made to which Page
            the hyperlink should point.
            This decision is made based on the Priority of the Component Template used
            to render the Component: the hyperlink will point to the Page containing
            a Component Presentation with the highest priority.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.RelatedSchemas">
            <summary>
            Get access to the "related" Schemas.
            </summary>
            <value>A list of <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> objects. This is a connected collection: changes to the collection are reflected in the state of the Component Template.</value>
            <remarks>
            If a Component Template is related to a Schema, it means that the Component Template
            can render Components based on that Schema.
            Component Template - Schema relationships are used to filter Component Templates
            in the GUI. When the user adds a Component Presentation to a Page, he has to
            select a Component and a Component Template. Once the Component is selected,
            the list of Component Templates is filtered: it shows only the Component Templates
            that are related to the Schema that the Component is based on.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.TrackingCategories">
            <summary>
            Get access to the "tracking" Categories.
            </summary>
            <value>A list of <see cref="T:Tridion.ContentManager.ContentManagement.Category"/> objects. This is a connected collection: changes to the collection are reflected in the state of the Component Template.</value>
            <remarks>
            When rendering a Component using the Component Template,
            code to increment "tracking keys" can get generated by the system.
            Which "tracking keys" will get incremented is determined by the Keywords
            attached to the Component and the Tracking Categories set on the Component Template:
            each Keyword attached to the Component which is part of one of the Tracking Categories
            will result in an associated "tracking key" increment.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.ComponentTemplate.ApprovalStatus">
            <summary>
            Get or set the approval status of the item.
            </summary>
            <value>
            An <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/> object representing
            the approval status of the item or <c>null</c> if the item has not been part of a workflow process.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.Destination">
            <summary>
            Represents a physical destination for the Publisher.
            </summary>
            <remarks>
            Destinations are a part of the definition of a <see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget"/>.
            A Destination specifies where and how the transport package created by the Publisher should be transported.
            Note that this is typically not the final publishing destination, but the location where
            the Deployer picks the transport package up.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Destination.#ctor(System.String,Tridion.ContentManager.ContentManagement.Schema,System.Xml.XmlElement)">
            <summary>
            Create an instance.
            </summary>
            <param name="title">The title</param>
            <param name="protocol">The Protocol Schema specifying which protocol to use for transport.</param>
            <param name="protocolFields">The root elements of the "protocol fields": the values for the fields defined in the Protocol Schema.</param>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Destination.Title">
            <summary>
            Get or set the title (display name) of the Destination.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Destination.Protocol">
            <summary>
            Get or set the Protocol Schema.
            </summary>
            <value>A Schema object (purpose must be <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Protocol"/>).</value>
            <remarks>
            The Protocol Schema specifies which protocol to use for transport and defines
            "protocol fields": parameters needed for the transport.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Destination.ProtocolFields"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Destination.ProtocolFields">
            <summary>
            Get or set the "protocol fields": parameters needed for the transport.
            </summary>
            <value>
            The root element of the protocol fields XML structure.
            </value>
            <remarks>
            This property provides low-level access to the protocol fields XML.
            It is possible to access the protocol fields through the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields"/> API.
            </remarks>
            <example>
            To read a single protocol field value with the ItemFields API:
            <code>
            PublicationTarget myPubTarget = (PublicationTarget)mySession.GetObject("tcm:0-1-65537");
            Destination myDestination = myPubTarget.Destinations[0];
            ItemFields protocolFields = new ItemFields(myDestination.ProtocolFields, myDestination.Protocol);
            TextField myTextField = (TextField)protocolFields["MyTextFieldName"];
            string myTextFieldValue = myTextField.Value;
            </code>
            </example>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Destination.Protocol"/>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.IPublishLocation">
            <summary>
            Interface used for retrieving the publish location path and/or URL.
            </summary>
            <remarks>
            This interface is implemented by the classes <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> and <see cref="T:Tridion.ContentManager.CommunicationManagement.Page"/>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.IPublishLocation.PublishLocationPath">
            <summary>
            Get the file system path, including the item's own directory/file name and extension.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.IPublishLocation.PublishLocationUrl">
            <summary>
            Get the URL.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.Page">
            <summary>
            Represents a Page: an artifact in the Publication's target structure.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Page.
            </summary>
            <param name="session">The Session in which the Page should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> in which the Page should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Page.
            </summary>
            <param name="id">The identifier (TCM URI) of the Page.</param>
            <param name="session">The Session in which the Page should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Page.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Page.</param>
            <param name="session">The Session in which the Page should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.FileName">
            <summary>
            Get or set the file name.
            </summary>
            <remarks>
            The file name is the Page's physical name in the target structure.
            The file name is subject to the restrictions of the Windows file system.
            The file name does not include the file extension.
            The file extension is determined by the Page Template: <see cref="P:Tridion.ContentManager.CommunicationManagement.PageTemplate.FileExtension"/>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.PageTemplate">
            <summary>
            Get or set the Page Template used to render the Page.
            </summary>
            <remarks>
            The Page Template can be set explicitly on the Page or be inherited from the containing 
            Structure Group: <see cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.DefaultPageTemplate"/>
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Page.IsPageTemplateInherited"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.IsPageTemplateInherited">
            <summary>
            Get or set whether the Page Template is inherited from the containing Structure Group.
            </summary>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Page.PageTemplate"/>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.DefaultPageTemplate"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.ComponentPresentations">
            <summary>
            Get access to the Component Presentations on the Page.
            </summary>
            <value>A list of <see cref="T:Tridion.ContentManager.CommunicationManagement.ComponentPresentation"/> objects. This is a connected collection: changes to the collection are reflected in the state of the Page.</value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.PublishPath">
            <summary>
            Get the publish path of the Page.
            </summary>
            <remarks>
            The publish path is formed by a concatenation of the containing 
            Publication's <see cref="P:Tridion.ContentManager.CommunicationManagement.Publication.PublicationPath"/> and the intermediary
            Structure Groups' <see cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.Directory"/> (recursively).
            The path does not include the Page's own filename or extension.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Page.PublishLocationPath"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.ApprovalStatus">
            <summary>
            Get or set the approval status of the item.
            </summary>
            <value>
            An <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/> object representing
            the approval status of the item or <c>null</c> if the item has not been part of a workflow process.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.PublishLocationPath">
            <summary>
            Gets the publish path for the Page, including the filename and extension.
            </summary>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Page.PublishLocationUrl"/>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishLocationPath"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Page.PublishLocationUrl">
            <summary>
            Gets the publish URL for the Page.
            </summary>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Page.PublishLocationPath"/>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishLocationUrl"/>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.PageTemplate">
            <summary>
            Represents a Page Template: a template used to render a Page.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Page Template.
            </summary>
            <param name="session">The Session in which the Page Template should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> in which the Page Template should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Page Template.
            </summary>
            <param name="id">The identifier (TCM URI) of the Page Template.</param>
            <param name="session">The Session in which the Page Template should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PageTemplate.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Page Template.</param>
            <param name="session">The Session in which the Page Template should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PageTemplate.FileExtension">
            <summary>
            Get or set the file extension used for Pages based on this Page Template.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PageTemplate.ApprovalStatus">
            <summary>
            Get or set the approval status of the item.
            </summary>
            <value>
            An <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/> object representing
            the approval status of the item or <c>null</c> if the item has not been part of a workflow process.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.Publication">
            <summary>
            Represents a Publication: a <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> used for publishing.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Repository">
            <summary>
            Represents a Repository: a context for Blueprinting
            </summary>
            <remarks>
            In R5.3, the only concrete instances of Repository are Publications.
            All Publications are Repositories, but in the future not all Repositories have to be Publications.
            Basically, a Repository is the same as a Publication, but without any Communication Management functionalities.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.SystemWideObject">
            <summary>
            Abstract base class for all system-wide objects.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create an instance for a new object.
            </summary>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing object.
            </summary>
            <param name="id">The identifier (TCM URI) of the item.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.SystemWideObject.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the object.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create an instance for a new Repository.
            </summary>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Repository.
            </summary>
            <param name="id">The identifier (TCM URI) of the Repository.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Publication Target.</param>
            <param name="session">The Session in which the Publication Target should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetNewRootOrganizationalItem``1">
            <summary>
            Get a new root organizational item of the given type.
            </summary>
            <typeparam name="T">The type of the organizational item. Must be a sub-type of <see cref="T:Tridion.ContentManager.ContentManagement.OrganizationalItem"/></typeparam>
            <returns>An organizational item instance representing a new root organizational item.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetNewObject``1"/>
            <seealso cref="M:Tridion.ContentManager.Session.GetNewObject``1"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetObject(System.String)">
            <summary>
            Get a (repository-local) object in the context of this Repository.
            </summary>
            <param name="uri">The URI of the object. Can be either a TCM URI or a WebDAV URL representing a TCM object.</param>
            <returns>The requested object.</returns>
            <remarks>
            The given URI may be in another Repository, but the returned object will be in the context of the given Repository
            </remarks>
            <example><code>
            Repository testRepository = (Repository)session.GetObject("tcm:0-2-1");
            Component testComponent = (Component)testRepository.GetObject("tcm:1-3");
            MessageBox.Show(testComponent.ID); // will show "tcm:2-3"
            </code></example>
            <seealso cref="M:Tridion.ContentManager.Session.GetObject(System.String)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetItems(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of items contained in this Repository.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>ItemType</term><description>Only return items with the given item type(s)</description></item>
                <item><term>LockFilter</term><description>Specifies a bitmask to apply to the items' LockType. Must be used in combination with LockResult.</description></item>
                <item><term>LockResult</term><description>Only return items with the given LockType (after the LockFilter bitmask has been applied).</description></item>
                <item><term>SubType</term><description>Only return item with the given sub-type: <see cref="T:Tridion.ContentManager.ContentManagement.SchemaPurpose"/>, <see cref="T:Tridion.ContentManager.ContentManagement.ComponentType"/> or template type ID.</description></item>
                <item><term>Recursive</term><description>Specifies whether to include items in contained organizational items (recursively).</description></item>
            </list>
            </param>
            <returns>A list of repository-local objects.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetListItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListItems(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of items contained in this Repository as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.ContentManagement.Repository.GetItems(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListItems).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListOrganizationalItems(Tridion.ContentManager.Filter)">
            <summary>
            Gets a recursive list of all Organizational Items contained in this Repository.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>ItemType</term><description>Only return Organizational Items with the given item type(s)</description></item>
                <item><term>WithTrustees</term><description>Only return Organizational Items that use ALL the specified trustees in their permissions.</description></item>
                <item><term>WithoutTrustees</term><description>Only return Organizational Items that do not use ANY of the specified trustees in their permissions.</description></item>
            </list>
            </param>
            <returns>The root element of the XML list (tcm:ListOrganizationalItems)</returns>
            <remarks>
            Use this method if you want to retrieve a recursive list of Organizational Items in a given Publication.
            Since the parent of each org. item is part of the list data, it's possible to build up a tree structure with this data.
            This method can also be used to do reporting on the security structure found a Publication.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetCategories(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of Categories in this Repository.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>Root</term><description>Only return the root categories (<c>true</c>) or non-root categories (<c>false</c>).</description></item>
            </list>
            </param>
            <returns>A list of Category objects.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetListCategories(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListCategories(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of Categories in this Repository as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.ContentManagement.Repository.GetCategories(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListCategories).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetCategories(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetOrphanKeywords(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of "orphan" Keywords: Keywords that should have a parent, but don't.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>RootCategory</term><description>Only return orphan keywords within a specific root Category.</description></item>
            </list>
            </param>
            <returns>A list of Keyword objects.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListOrphanKeywords(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of "orphan" Keywords as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.ContentManagement.Repository.GetOrphanKeywords(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListKeywords).</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListTaxonomies(Tridion.ContentManager.Filter)">
            <summary>
            Get an XML list of the taxonomies in this Repository
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>UseForNavigation</term><description>Only return taxonomies with root Categories that have the given value for <see cref="P:Tridion.ContentManager.ContentManagement.Category.UseForNavigation"/>.</description></item>
            </list>
            </param>
            <returns>The root element of the XML list (tcm:ListTaxonomies).</returns>
            <remarks>
            Taxonomies are not separate items; a taxonomy is formed by one or more Categories: 
            a root Category (i.e. a Category without allowed parent Categories) and descendant Categories.
            The description of the root Category is used as the title of the Taxonomy.
            <para>This is part of the Taxonomies functionality which is separately licensed.</para>
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetTaxonomiesOwl(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetTaxonomiesOwl(Tridion.ContentManager.Filter)">
            <summary>
            Get the taxonomies in this Repository in RDF/OWL-Lite format.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>UseForNavigation</term><description>Only return taxonomies with root Categories that have the given value for <see cref="P:Tridion.ContentManager.ContentManagement.Category.UseForNavigation"/>.</description></item>
                <item><term>Categories</term><description>Only return taxonomies with the given root Categories.</description></item>
            </list>
            </param>
            <returns>The root element of the RDF/OWL-Lite output (rdf:RDF)</returns>
            <remarks>
            Taxonomies are not separate items; a taxonomy is formed by one or more Categories: 
            a root Category (i.e. a Category without allowed parent Categories) and descendant Categories.
            <para>This is part of the Taxonomies functionality which is separately licensed.</para>
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetListTaxonomies(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetListPathToCategory(Tridion.ContentManager.ContentManagement.Category,Tridion.ContentManager.Filter)">
            <summary>
            Get the path from the root of the taxonomy to the given Category.
            </summary>
            <param name="category">The Category to get the path for.</param>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            Currently, no conditions are supported.
            </param>
            <returns>The root element of the path structure (tcm:ListPathToCategory).</returns>
            <remarks>
            The path structure is a set of nested tcm:Category elements starting at the root Category.
            For the root Category, the Keywords are included.
            <para>This is part of the Taxonomies functionality which is separately licensed.</para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Repository.GetBLClassName">
            <summary>
            The BL class name of all Repositories is "Publication".
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.Creator">
            <summary>
            Get the user who created the Repository.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.RootFolder">
            <summary>
            Get the root Folder (typically called "Building Blocks") of the Repository.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.CategoriesXsd">
            <summary>
            Get the Categories XSD of this Repository.
            </summary>
            <value>The root element of the Categories XSD (xsd:schema).</value>
            <remarks>
            The Categories XSD is a W3C Schema defining all Categories and Keywords (titles)
            in the Repository.
            Since each Repository has its own set of Categories and Keywords and Keyword titles can be localized,
            each Repository has its own Categories XSD.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.Parents">
            <summary>
            Get access to the parent Repositories.
            </summary>
            <value>A list of Repository objects. This is a connected collection: changes to the collection are reflected in the state of the Repository.</value>
            <remarks>
            The order of the items in the lists corresponds to the Blueprint priority of the parents.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.DefaultMultimediaSchema">
            <summary>
            Get or set the default Multimedia Schema.
            </summary>
            <remarks>
            The default Multimedia Schema is used by WebDAV.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.MetadataSchema">
            <summary>
            Get or set the Schema for the (custom) metadata on the Repository.
            </summary>
            <value>A Schema object (purpose must be <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Metadata"/>) or <c>null</c> if the Repository has no custom metadata.</value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Repository.Metadata"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Repository.Metadata">
            <summary>
            Get or set the (custom) metadata as XML.
            </summary>
            <value>
            The root element of the metadata XML or <c>null</c> if there is no custom metadata.
            </value>
            <remarks>
            This property provides low-level access to the metadata XML.
            It is also possible to access the metadata through the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields"/> API.
            </remarks>
            <example>
            To read a single metadata field value with the ItemFields API:
            <code>
            Repository myRepository = (Repository)mySession.GetObject("tcm:0-1-1");
            ItemFields metadataFields = new ItemFields(myRepository.Metadata, myRepository.MetadataSchema);
            TextField myTextField = (TextField)metadataFields["MyTextFieldName"];
            string myTextFieldValue = myTextField.Value;
            </code>
            </example>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Repository.MetadataSchema"/>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create an instance for a new Publication.
            </summary>
            <param name="session">The Session in which the Publication should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Publication.
            </summary>
            <param name="id">The identifier (TCM URI) of the Publication.</param>
            <param name="session">The Session in which the Publication should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.Publication.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Publication Target.</param>
            <param name="session">The Session in which the Publication Target should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.RootStructureGroup">
            <summary>
            Get the root Structure Group of this Publication.
            </summary>
            <value>A <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> object or <c>null</c> if no root Structure Group has been defined (yet).</value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.PublicationPath">
            <remarks>
            The publish path of Structure Groups and Pages starts with the Publication's PublicationPath.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.IPublishLocation.PublishLocationPath"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.PublicationType">
            <summary>
            Get or set the Publication Type.
            </summary>
            <value>
            The value must be the name of one of the configured Publication Types( see Tridion.ContentManger.config )/ 
            
            The following values can be used out-of-the box (configured with installation by default ):
            <list type="table">
                <item><term> Content </term> <description> Content Publication Type</description></item>
                <item><term> Web </term> <description> Web Publication Type</description></item>
            </list>
            </value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.PublicationUrl">
            <summary>
            Get or set the publication/publish URL.
            </summary>
            <remarks>
            The publish URL of Structure Groups and Pages starts with the Publication's PublicationUrl.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.IPublishLocation.PublishLocationUrl"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.MultimediaPath">
            <summary>
            Get or set the path to the directory containing published binaries.
            </summary>
            <remarks>
            This property is for backward compatibility.
            As of 5.3, it is also possible to publish binaries in any Structure Group.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.MultimediaUrl">
            <summary>
            Get or set the URL of the directory containing published binaries.
            </summary>
            <remarks>
            This property is for backward compatibility.
            As of 5.3, it is also possible to publish binaries in any Structure Group.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.DefaultComponentTemplate">
            <summary>
            Get or set the default Component Template.
            </summary>
            <remarks>
            The default Component Template is used to render previews of Components.
            It also provides the default content for new Component Templates.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.DefaultPageTemplate">
            <summary>
            Get or set the default Page Template.
            </summary>
            <remarks>
            The default Page Template provides the default content for new Page Templates.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.Publication.DefaultTemplateBuildingBlock">
            <summary>
            Get or set the default Template Building Block.
            </summary>
            <remarks>
            The default Template Building Block provides the default content for new Template Building Blocks.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget">
            <summary>
            Represents a Publication Target: a logical target for publishing.
            </summary>
            <remarks>
            A Publication Target represents one or more physical targets ("Destinations") with the
            same logical purpose. For example: a web farm consisting of multiple physical web servers.
            Publication Targets, in turn, are grouped using Target Types.
            </remarks>
            <seealso cref="T:Tridion.ContentManager.CommunicationManagement.TargetType"/>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTarget.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create an instance for a new Publication Target.
            </summary>
            <param name="session">The Session in which the Publication Target should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTarget.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Publication Target.
            </summary>
            <param name="id">The identifier (TCM URI) of the Publication Target.</param>
            <param name="session">The Session in which the Publication Target should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.PublicationTarget.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Publication Target.</param>
            <param name="session">The Session in which the Publication Target should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.Description">
            <summary>
            Get or set the description for this Publication Target.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.Publications">
            <summary>
            Get access to the Publications which can be published to this Publication Target.
            </summary>
            <value>A list of <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> objects. This is a connected collection: changes to the collection are reflected in the state of the Publication Target.</value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.TargetTypes">
            <summary>
            Get access to the Target Types to which this Publication Target is attached.
            </summary>
            <value>A list of <see cref="T:Tridion.ContentManager.CommunicationManagement.TargetType"/> objects. This is a connected collection: changes to the collection are reflected in the state of the Publication Target.</value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.Destinations">
            <summary>
            Get access to the publisher Destinations for the Publication Target.
            </summary>
            <value>A list of <see cref="T:Tridion.ContentManager.CommunicationManagement.Destination"/> objects. This is a connected collection: changes to the collection are reflected in the state of the Publication Target.</value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.TargetLanguage">
            <summary>
            Get or set the target (code) language.
            </summary>
            <value>The possible values are currently constrained by the system schema (cm_xml.xsd):
            <list type="bullet">
                <item>ASP/JavaScript</item>
                <item>ASP/VBScript</item>
                <item>JSP</item>
                <item>None</item>
                <item>TCDL</item>
                <item>ASP.NET</item>
            </list>
            </value>
            <remarks>
            The target language determines how Content Delivery code (e.g. linking and profiling) gets generated.
            The Content Manager outputs an intermediary language (TCDL), which gets transformed
            by the Deployer (TCDL Transformer) into a language of choice, dependent on the target language setting.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.DefaultCodePage">
            <summary>
            Get or set the default code page for the Publication Target.
            </summary>
            <remarks>
            All rendered Pages and dynamic Component Presentations are encoded using the default code page,
            unless a template explicitly overrides the code page.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.MinApprovalStatus">
            <summary>
            Get or set the minimal approval status for publishing to this Publication Target.
            </summary>
            <remarks>
            When rendering items that are in workflow, the version in workflow may be rendered,
            but only if its approval status is equal or "higher" than the minimal approval status
            of the Publication Target. Otherwise, the latest checked-in version gets rendered.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.Priority">
            <summary>
            Get or set the default queue priority.
            </summary>
            <remarks>
            Publish actions towards this Publication Target get queued with the default priority,
            unless explicitly overridden in the publish action.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.StructureGroup">
            <summary>
            Represents a Structure Group: an Organizational Item used to build the Publication's target structure
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.OrganizationalItem">
            <summary>
            Abstract base class for "organizational items": items used to organize the items in a Repository
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Organizational Item.
            </summary>
            <param name="session">The Session in which the OrganizationalItem should be created.</param>
            <param name="parentId">The TCM URI of the parent item in which the OrganizationalItem should be created.
            For root organization items, this is the <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/>.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Organizational Item.
            </summary>
            <param name="id">The identifier (TCM URI) of the Component.</param>
            <param name="session">The Session in which the Component should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the object.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetNewObject``1">
            <summary>
            Get a new repository-local object of the given type within this Organizational Item.
            </summary>
            <typeparam name="T">The type of the object to create. Must be a sub-type of <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/></typeparam>
            <returns>A new repository-local object</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetNewRootOrganizationalItem``1"/>
            <seealso cref="M:Tridion.ContentManager.Session.GetNewObject``1"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetItems(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of items contained in this Organizational Item.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>ItemType</term><description>Only return items with the given item type(s)</description></item>
                <item><term>LockFilter</term><description>Specifies a bitmask to apply to the items' LockType. Must be used in combination with LockResult.</description></item>
                <item><term>LockResult</term><description>Only return items with the given LockType (after the LockFilter bitmask has been applied).</description></item>
                <item><term>BasedOnSchema</term><description>Only return Components based on the given Schema(s). Currently not implemented in combination with Recursive.</description></item>
                <item><term>SubType</term><description>Only return item with the given sub-type: <see cref="T:Tridion.ContentManager.ContentManagement.SchemaPurpose"/>, <see cref="T:Tridion.ContentManager.ContentManagement.ComponentType"/> or template type ID.</description></item>
                <item><term>Recursive</term><description>Specifies whether to include items in contained organizational items (recursively).</description></item>
                <item><term>ShowNewItems</term><description>Specifies whether to include new items (items that have not been checked-in yet).</description></item>
            </list>
            </param>
            <returns>A list of repository-local objects.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetListItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetListItems(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of items contained in this Organizational Item as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetItems(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListItems).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Structure Group.
            </summary>
            <param name="session">The Session in which the Structure Group should be created.</param>
            <param name="parentId">The TCM URI of the parent item in which the Structure Group should be created.
            The parent item can be a <see cref="T:Tridion.ContentManager.CommunicationManagement.StructureGroup"/> or a <see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/> for the root Structure Group.
            </param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Structure Group.
            </summary>
            <param name="id">The identifier (TCM URI) of the Structure Group.</param>
            <param name="session">The Session in which the Structure Group should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.StructureGroup.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Structure Group.</param>
            <param name="session">The Session in which the Structure Group should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.Directory">
            <summary>
            Get or set the directory name
            </summary>
            <remarks>
            The directory name is the Structure Group's physical name in the target structure.
            The directory name is subject to the restrictions of the Windows file system.
            The directory name of the root Structure Group may be empty.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishLocationPath"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.DefaultPageTemplate">
            <summary>
            Get or set the default Page Template.
            </summary>
            <remarks>
            All items contained in the Structure Group which don't have a (default) Page Template
            set explicitly inherit their setting from the Structure Group.
            The Structure Group itself may inherit its default Page Template setting from its parent
            (Structure Group or Publication).
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.IsDefaultPageTemplateInherited"/>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Page.PageTemplate"/>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Publication.DefaultPageTemplate"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.IsDefaultPageTemplateInherited">
            <summary>
            Get or set whether the default Page Template is inherited from the Structure Group's parent.
            </summary>
            <remarks>
            The Structure Group's parent is the containing Structure Group or the Publication in case
            of the root Structure Group.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.DefaultPageTemplate"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishPath">
            <summary>
            Get the publish path of the Structure Group.
            </summary>
            <remarks>
            The publish path is formed by a concatenation of the containing 
            Publication's <see cref="P:Tridion.ContentManager.CommunicationManagement.Publication.PublicationPath"/> and the intermediary 
            Structure Groups' <see cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.Directory"/> (recursively).
            The path does not include the Structure Groups's own directory name.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.Directory"/>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishLocationPath"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.IsActive">
            <summary>
            Get or set whether items within the Structure Group can be published.
            </summary>
            <value><c>false</c> if the IsActive property of this Structure Group 
            or any Structure Group "above" it in the containment hierarchy is <c>false</c>.</value>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishLocationPath">
            <summary>
            Get the publish path for the Structure Group, including its directory name.
            </summary>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishPath"/>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishLocationUrl"/>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishLocationUrl">
            <summary>
            Get the publish URL for the Structure Group.
            </summary>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.StructureGroup.PublishLocationPath"/>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.TargetType">
            <summary>
            Represents a Target Type: a logical target for publishing.
            </summary>
            <remarks>
            When publishing in the Content Manager Explorer, the user selects Target Types.
            Target Types are a abstraction over Publication Targets: 
            multiple Publication Targets can be grouped under one Target Type.
            The primary purpose of this is to use different Publication Targets for different Publications.
            </remarks>
            <seealso cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget"/>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetType.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create an instance for a new Publication Target.
            </summary>
            <param name="session">The Session in which the Publication Target should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TargetType.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Publication Target.
            </summary>
            <param name="id">The identifier (TCM URI) of the Publication Target.</param>
            <param name="session">The Session in which the Publication Target should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.CommunicationManagement.TargetType.Description">
            <summary>
            Get or set the description of the Target Type.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock">
            <summary>
            Represents a Template Building Block: a re-usable template module.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Template Building Block.
            </summary>
            <param name="session">The Session in which the Template Building Block should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> in which the Template Building Block should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Template Building Block.
            </summary>
            <param name="id">The identifier (TCM URI) of the Template Building Block.</param>
            <param name="session">The Session in which the Template Building Block should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.CommunicationManagement.TemplateBuildingBlock.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Template Building Block.</param>
            <param name="session">The Session in which the Template Building Block should be created.</param>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.BinaryContent">
            <summary>
            Represents the binary content of a Multimedia Component or a template.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BinaryContent.GetByteArray">
            <summary>
            Get the binary data as a byte array.
            </summary>
            <returns>A byte array containing the binary data.</returns>
            <remarks>
            Using a byte array means that the entire binary data has to be stored in memory.
            Alternatively, <see cref="M:Tridion.ContentManager.ContentManagement.BinaryContent.WriteToStream(System.IO.Stream)"/> can be used to stream the data to a desired destination.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.BinaryContent.WriteToStream(System.IO.Stream)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BinaryContent.WriteToStream(System.IO.Stream)">
            <summary>
            Write the binary data to a given stream.
            </summary>
            <param name="binaryStream">The stream to write the binary data to.</param>
            <remarks>
            Currently, <see cref="M:Tridion.ContentManager.ContentManagement.BinaryContent.GetByteArray"/> is used internally.
            However, in the future this can be changed to support a real streaming model
            supporting large size binary data.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.BinaryContent.GetByteArray"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BinaryContent.ReadFromStream(System.IO.Stream)">
            <summary>
            Read the binary data from a given stream.
            </summary>
            <param name="binaryStream">The stream to read the binary data from.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.BinaryContent.ReadFromFile(System.String)">
            <summary>
            Read the binary data from a given file.
            </summary>
            <param name="path">The path/filename of the file containing the binary data.</param>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BinaryContent.MultimediaType">
            <summary>
            Get of set the Multimedia Type of the binary content.
            </summary>
            <remarks>
            This only applies to the binary content of Multimedia Components;
            for templates with binary content, this property is always <c>null</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BinaryContent.IsExternal">
            <summary>
            Get or set whether the binary content is stored internally or externally.
            </summary>
            <remarks>
            If the binary content is stored externally, the <see cref="P:Tridion.ContentManager.ContentManagement.BinaryContent.Filename"/> property
            should contain the URL where the binary content can be retrieved.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.BinaryContent.Filename"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BinaryContent.Filename">
            <summary>
            Get or set the filename of the binary content.
            </summary>
            <remarks>
            If the binary content is stored externally, this must be the URL with which the binary content can be retrieved.
            If the binary content is stored internally, this should be the original path/filename.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.BinaryContent.IsExternal"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.BinaryContent.FileSize">
            <summary>
            Get the size of the binary data.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Category">
            <summary>
            Represents a Category of Keywords.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Category.
            </summary>
            <param name="session">The Session in which the Category should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Repository"/> in which the Category should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Category.
            </summary>
            <param name="id">The identifier (TCM URI) of the Category.</param>
            <param name="session">The Session in which the Category should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Category.</param>
            <param name="session">The Session in which the Category should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetKeywordByTitle(System.String)">
            <summary>
            Get a Keyword within this Category based on its title.
            </summary>
            <param name="title">The title of the Keyword</param>
            <returns>A <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> object.</returns>
            <remarks>
            If no Keyword with the given title exists within the Category, an <see cref="T:Tridion.ContentManager.ItemDoesNotExistException"/> is thrown.
            If a cache is attached to the <see cref="T:Tridion.ContentManager.Session"/>, the Keyword Title-Id mappings
            are cached in a region called "KeywordTitleMapping".
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetKeywords(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of Keywords in this Category.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>LimitResult</term><description>Limit the number of Keywords returned in the list to this number.</description></item>
            </list>
            </param>
            <returns>A list of Keyword objects.</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Category.GetListKeywords(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetListKeywords(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of Keywords in this Category as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attributes to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.ContentManagement.Category.GetKeywords(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListKeywords).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Category.GetKeywords(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetChildCategories(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of child Categories.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. No conditions are currently supported.
            </param>
            <returns>A list of Category objects.</returns>
            <remarks>
            Child Categories are Categories that have this Category as allowed parent Category.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Category.GetListChildCategories(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Category.GetListChildCategories(Tridion.ContentManager.Filter)">
            <summary>
            Get a list of child Categories as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attributes to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.ContentManagement.Category.GetChildCategories(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListCategories).</returns>
            <remarks>
            Child Categories are Categories that have this Category as allowed parent Category.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Category.GetChildCategories(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.XmlName">
            <summary>
            Get or set the XML (type) name of the Category.
            </summary>
            <remarks>
            Each publication contains a "Categories XSD" in which all Categories and their Keywords
            are defined. In this Categories XSD, each Category is represented as a complex type with this name.
            The XML name is subject to the restrictions specified for type names in XML Schemas:
            <list type="bullet">
            <item>The first character must be a letter or an underscore.</item>
            <item>Following characters may be letters, digits, underscores, dashes or dots.</item>
            </list>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.UseForNavigation">
            <summary>
            Get or set whether the taxonomy in this Category will be published.
            </summary>
            <remarks>
            Before 5.4 the behavior was get or set whether the taxonomy can be used for navigation. 
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.IsRoot">
            <summary>
            Get whether the Category is a root Category (i.e. it has no allowed parent Categories other than itself).
            </summary>
            <remarks>
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Category.AllowedParentCategories"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.AllowedParentCategories">
            <summary>
            Get access to the allowed parent Categories.
            </summary>
            <value>A collection of Category objects. This is a connected collection: changes to the collection are reflected in the object's state.</value>
            <remarks>
            Keywords from this Category are allowed to have parent Keywords from the allowed parent Categories.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Category.IsRoot"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.Description">
            <summary>
            Get or set the description of the Category.
            </summary>
            <remarks>
            The description can be used for informational purposes.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Category.KeywordMetadataSchema">
            <summary>
            Get or set the metadata Schema for the Keywords in this Category.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Component">
            <summary>
            Represents a Component: a generic holder of content and metadata.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Component.
            </summary>
            <param name="session">The Session in which the Component should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> in which the Component should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Component.
            </summary>
            <param name="id">The identifier (TCM URI) of the Component.</param>
            <param name="session">The Session in which the Component should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Component.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Component.</param>
            <param name="session">The Session in which the Component should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Component.IsBasedOnTridionWebSchema">
            <summary>
            Determine whether the Component is based on a Tridion Web Schema
            </summary>
            <remarks>
            When saving a Schema, its content model is analyzed to determine whether it is simple enough
            to qualify as "Tridion Web Schema".
            Components which are based on a Tridion Web Schema can be edited using a form-based User Interface
            in the Content Manager Explorer.
            Furthermore, their content can be accessed using the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields"/> API.
            Note that the metadata can always be accessed using the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields"/> API.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Component.ComponentType">
            <summary>
            Get the type of the Component (Normal or Multimedia).
            </summary>
            <remarks>
            This type is derived from the <see cref="P:Tridion.ContentManager.ContentManagement.Component.Schema"/> on which the Component is based.
            Components with type <see cref="F:Tridion.ContentManager.ContentManagement.ComponentType.Multimedia"/> are often referred to as "Multimedia Components".
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Component.MetadataSchema">
            <summary>
            Get the Schema for the item's metadata
            </summary>
            <remarks>
            Components are based on a Schema that defines the structure of both the content and metadata.
            Therefore, the MetadataSchema property is the same as the <see cref="P:Tridion.ContentManager.ContentManagement.Component.Schema"/>.
            Setting the Schema should be done through the <see cref="P:Tridion.ContentManager.ContentManagement.Component.Schema"/> property.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Component.Schema"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Component.Schema">
            <summary>
            Get or set the Schema for the Component's content and metadata.
            </summary>
            <value>A Schema object (purpose must be <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Component"/>).</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Component.Content">
            <summary>
            Get or set the Component's XML content.
            </summary>
            <value>
            The root element of the XML content or <c>null</c> for Multimedia Components.
            </value>
            <remarks>
            This property provides low-level access to the XML content.
            If the Component is based on a Tridion Web Schema, it is possible to access the contents
            through the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields"/> API.
            </remarks>
            <example>
            To read a single content field value with the ItemFields API:
            <code>
            Component myComponent = (Component)mySession.GetObject("tcm:1-8");
            ItemFields contentFields = new ItemFields(myComponent.Content, myComponent.Schema);
            TextField myTextField = (TextField)contentFields["MyTextFieldName"];
            string myTextFieldValue = myTextField.Value;
            </code>
            </example>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Component.BinaryContent">
            <summary>
            Get access to the Component's binary content.
            </summary>
            <remarks>
            Only Multimedia Components (i.e. Component based on a Multimedia Schema) have binary content.
            For "normal" Components, which have XML content instead, this property is <c>null</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Component.ApprovalStatus">
            <summary>
            Get or set the approval status of the item.
            </summary>
            <value>
            An <see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/> object representing
            the approval status of the item or <c>null</c> if the item has not been part of a workflow process.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.ComponentType">
            <summary>
            Specifies the (sub-)type of a Component.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.ComponentType.Normal">
            <summary>A "normal" Component containing XML content.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.ComponentType.Multimedia">
            <summary>A Multimedia Component containing binary content.</summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField">
            <summary>
            Represents a Component link field.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ItemField">
            <summary>
            Abstract base class for an Item Field representing a field in content/metadata.
            </summary>
            <remarks>
            For each field type, a subclass of ItemField is defined.
            These subclasses expose strongly-typed properties to access the value(s) of the field.
            </remarks>
            <seealso cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema Field Definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema Field within a TridionWebSchema representation.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition (factory method).
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema Field within a TridionWebSchema representation.</param>
            <param name="session">The Session in which the object should be created.</param>
            <returns>An ItemField-derived object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.GetFieldElements(System.Xml.XmlElement)">
            <summary>
            Get the XML elements for this field.
            </summary>
            <param name="parentElement">The XML parent element in which to search.</param>
            <returns>An XmlNodeList containing zero or more XML elements.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemField.Name">
            <summary>
            Get the field name (the XML name as defined in the Schema).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemField.Definition">
            <summary>
            Get the definition of the field as specified in the Schema.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemField.Session">
            <summary>
            Get the Session in which the object is created.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemField.SchemaFieldElement">
            <summary>
            Get the root element of the Schema Field Definition
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.ToString">
            <summary>
            Get a string representation of the object.
            </summary>
            <returns>
            A string representation of the field's value(s), separated by newline characters (if multiple).
            </returns>
            <remarks>
            The string representation is shown in a debugger.
            Avoid using it for other purposes; use the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.Value"/> or <see cref="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.Values"/> property instead.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.Value">
            <summary>
            Get or set the value of the (single-valued) field. 
            </summary>
            <value>
            A Component object representing the linked Component or <c>null</c> if the field doesn't have a value.
            </value>
            <remarks>
            If the field is multi-valued, getting this property yields the first value (or <c>null</c> if none).
            Setting this property reduces the number of values to one.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.Values"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.Values">
            <summary>
            Get access to the values of the (multi-valued) field.
            </summary>
            <value>
            A list of Component objects representing the linked Components. This is a connected collection: changes in the collection are reflected in the state of the field.
            </value>
            <remarks>
            If the field is single-valued, the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.Value"/> property can be used instead.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkField.Value"/>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition">
            <summary>
            Represents a Component link field definition (in a Schema).
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition">
            <summary>
            Abstract base class for Item Field Definitions (specified in a Schema)
            </summary>
            <seealso cref="T:Tridion.ContentManager.ContentManagement.Fields.SchemaFields"/>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.ItemField.Definition"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The XML name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition XML representation (factory method).
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema Field within a TridionWebSchema representation.</param>
            <param name="session">The Session in which the object should be created.</param>
            <returns>An ItemFieldDefinition-derived object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.GetElementName">
            <summary>
            Get the XML element name for the field definition in the TridionWebSchema representation.
            </summary>
            <returns>The XML element local name.</returns>
            <remarks>
            This is an abstract method; it must be overridden in a subclass.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.Name">
            <summary>
            Get or set the XML name of the field.
            </summary>
            <remarks>
            A field's values are contained in XML elements with this name as (local) name.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.Description">
            <summary>
            Get or set the description/label of the field.
            </summary>
            <remarks>
            The description is used as labels in the Content Manager Explorer form-based editor.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.CustomUrl">
            <summary>
            Get or set the custom URL of the field.
            </summary>
            <remarks>
            If a custom URL is defined, the CME hyperlinks the label using this URL as hyperlink.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.MinOccurs">
            <summary>
            Get or set the minimum occurrence of the field.
            </summary>
            <remarks>
            The minimum occurrence specifies the minimum number of values that the field must have.
            Typical occurrence values are 0 (optional field) and 1 (required field).
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.MaxOccurs"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.MaxOccurs">
            <summary>
            Get or set the maximum occurrence of the field.
            </summary>
            <remarks>
            The maximum occurrence specifies the maximum number of values that field may have.
            Typical occurrence values are 1 (single valued field) and -1 (multi valued field).
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.ItemFieldDefinition.MinOccurs"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition.GetElementName">
            <summary>
            Get the XML element name for the field definition in the TridionWebSchema representation.
            </summary>
            <returns>The XML element local name.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition.AllowMultimediaLinks">
            <summary>
            Get or set whether links to Multimedia Components are allowed.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition.DefaultValue">
            <summary>
            Get or set the default value.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ComponentLinkFieldDefinition.AllowedTargetSchemas">
            <summary>
            Get access to the allowed Schemas for the linked Components.
            </summary>
            <value>
            A list of Schema objects representing the allowed Schemas.
            This is a connected collection: changes to the collection are reflected in the state of the field definition.
            </value>
            <remarks>
            An empty list means that the target Schema is not constrained.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition">
            <summary>
            Represents a Keyword field definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition.GetElementName">
            <summary>
            Get the XML element name for the field definition in the TridionWebSchema representation.
            </summary>
            <returns>The XML element local name.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition.Category">
            <summary>
            Get or set the Category in which the Keywords must reside.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition.DefaultValue">
            <summary>
            Get or set the default value.
            </summary>
            <value>
            A Keyword object or <c>null</c> if no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.KeywordFieldDefinition.List">
            <summary>
            Get access to the list of allowed values.
            </summary>
            <value>
            A ListDefinition object representing the list of allowed values.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition">
            <summary>
            Represents an embedded (schema) field definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition.GetElementName">
            <summary>
            Get the XML element name for the field definition in the TridionWebSchema representation.
            </summary>
            <returns>The XML element local name.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaFieldDefinition.EmbeddedSchema">
            <summary>
            Get or set the Schema that defines the embedded fields.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ExternalLinkFieldDefinition">
            <summary>
            Represents an external link field definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ExternalLinkFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ExternalLinkFieldDefinition.GetElementName">
            <summary>
            Get the XML element name for the field definition in the TridionWebSchema representation.
            </summary>
            <returns>The XML element local name.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ExternalLinkFieldDefinition.DefaultValue">
            <summary>
            Get or set the default value.
            </summary>
            <value>
            A string containing the default value or <c>null</c> if no default value is defined.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition">
            <summary>
            Represents a Multimedia link field definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition.GetElementName">
            <summary>
            Get the XML element name for the field definition in the TridionWebSchema representation.
            </summary>
            <returns>The XML element local name.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition.DefaultValue">
            <summary>
            Get or set the default value.
            </summary>
            <value>
            A Component object (must be of type <see cref="F:Tridion.ContentManager.ContentManagement.ComponentType.Multimedia"/>) representing the default
            or <c>null</c> if no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkFieldDefinition.AllowedTargetSchemas">
            <summary>
            Get access to the allowed Schemas for the linked Multimedia Components.
            </summary>
            <value>
            A list of Schema objects (purpose must be <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Multimedia"/>) representing the allowed Schemas.
            This is a connected collection: changes to the collection are reflected in the state of the field definition.
            </value>
            <remarks>
            An empty list means that the target Schema is not constrained.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition">
            <summary>
            Represents a number field definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.GetElementName">
            <summary>
            Get the XML element name for the field definition in the TridionWebSchema representation.
            </summary>
            <returns>The XML element local name.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.IsMinValueExclusive">
            <summary>
            Get or set whether the specified minimum value is exclusive or inclusive.
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.MinValue"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.IsMaxValueExclusive">
            <summary>
            Get or set whether the specified maximum value is exclusive or inclusive.
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.MaxValue"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.MinValue">
            <summary>
            Get or set the minimum value constraint.
            </summary>
            <value>
            A nullable floating-point value. If null, the no minimum value constraint is defined.
            </value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.IsMinValueExclusive"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.MaxValue">
            <summary>
            Get or set the maximum value constraint.
            </summary>
            <value>
            A nullable floating-point value. If null, no maximum value constraint is defined.
            </value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.IsMaxValueExclusive"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.DefaultValue">
            <summary>
            Get or set the default value.
            </summary>
            <value>
            A nullable floating-point value. If null, no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.Pattern">
            <summary>
            Get or set a regular expression pattern to constrain the value.
            </summary>
            <value>
            A string containing the (XSD) regular expression pattern or <c>null</c> if no pattern is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.TotalDigits">
            <summary>
            Get or set the constraint on the total number of digits.
            </summary>
            <value>
            A nullable integer value. If null, a constraint on the total number of digits is not defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.FractionDigits">
            <summary>
            Get or set the constraints on the number of fraction digits.
            </summary>
            <value>
            A nullable integer value. If null, a constraint on the number of fraction digits is not defined.
            </value>
            <remarks>
            If only integer values are allowed, this constraint should be set to <c>0</c>.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition.List">
            <summary>
            Get access to the list of allowed values.
            </summary>
            <value>
            A NumberListDefinition object representing the list of allowed values.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.NumberListDefinition">
            <summary>
            Provides information about whether/how to present a list of allowed number field values.
            </summary>
            <seealso cref="T:Tridion.ContentManager.ContentManagement.Fields.NumberFieldDefinition"/>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ListDefinition">
            <summary>
            Provides information about how a list of values should be represented to the user.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ListDefinition.Type">
            <summary>
            Get or set the list type (drop-down, checkboxes, radio buttons, etc.)
            </summary>
            <remarks>
            If the value is <see cref="F:Tridion.ContentManager.ContentManagement.Fields.ListType.None"/>, no allowed values are presented.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ListDefinition.Height">
            <summary>
            Get or set the height of the list (if applicable).
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberListDefinition.Entries">
            <summary>
            Get access to the allowed values.
            </summary>
            <value>
            A list of floating-point values representing the allowed values.
            This is a connected collection: changes to the collection are reflected in the state of the DateListDefinion object.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.DateListDefinition">
            <summary>
            Provides information about whether/how to present a list of allowed date field values.
            </summary>
            <seealso cref="T:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateListDefinition.Entries">
            <summary>
            Get access to the allowed values.
            </summary>
            <value>
            A list of DataTime values representing the allowed values.
            This is a connected collection: changes to the collection are reflected in the state of the DateListDefinion object.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition">
            <summary>
            Represents a date field definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.GetElementName">
            <summary>
            Get the XML element name for the field definition in the TridionWebSchema representation.
            </summary>
            <returns>The XML element local name.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.IsMinValueExclusive">
            <summary>
            Get or set whether the specified minimum value is exclusive or inclusive.
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.MinValue"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.IsMaxValueExclusive">
            <summary>
            Get or set whether the specified maximum value is exclusive or inclusive.
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.MaxValue"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.MinValue">
            <summary>
            Get or set the minimum value constraint.
            </summary>
            <value>
            A nullable DateTime value. If null, the no minimum value constraint is defined.
            </value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.IsMinValueExclusive"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.MaxValue">
            <summary>
            Get or set the maximum value constraint.
            </summary>
            <value>
            A nullable DateTime value. If null, no maximum value constraint is defined.
            </value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.IsMaxValueExclusive"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.DefaultValue">
            <summary>
            Get or set the default value.
            </summary>
            <value>
            A nullable DateTime value. If null, no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.Pattern">
            <summary>
            Get or set a regular expression pattern to constrain the value.
            </summary>
            <value>
            A string containing the (XSD) regular expression pattern or <c>null</c> if no pattern is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateFieldDefinition.List">
            <summary>
            Get access to the list of allowed values.
            </summary>
            <value>
            A DateListDefinition object representing the list of allowed values.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.SchemaFields">
            <summary>
            Represents the set of content/metadata field definitions in a Schema.
            </summary>
            <remarks>
            Two subsets of fields are distinguished: <see cref="P:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.Fields"/> and <see cref="P:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.MetadataFields"/>.
            It depends on the <see cref="T:Tridion.ContentManager.ContentManagement.SchemaPurpose"/> which of these subsets are present:
            <list type="table">
                <item>
                    <term><see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Component"/></term>
                    <description>Both subsets are present, unless the content is complex (in which case only the MetadataFields subset is present).</description>
                </item>
                <item>
                    <term><see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Multimedia"/></term>
                    <description>Only the MetadataFields subset is present.</description>
                </item>
                <item>
                    <term><see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Metadata"/></term>
                    <description>Only the MetadataFields subset is present.</description>
                </item>
                <item>
                    <term><see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Embedded"/></term>
                    <description>Only the Fields subset is present.</description>
                </item>
                <item>
                    <term><see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Protocol"/></term>
                    <description>Only the Fields subset is present.</description>
                </item>
                <item>
                    <term><see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.VirtualFolderType"/></term>
                    <description>Only the Fields subset is present.</description>
                </item>
                <item>
                    <term><see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.TemplateParameters"/></term>
                    <description>Only the Fields subset is present.</description>
                </item>
            </list>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.#ctor(Tridion.ContentManager.ContentManagement.Schema)">
            <summary>
            Create an instance based on a given Schema.
            </summary>
            <param name="schema">The Schema from which to get the field definitions.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.ToXsd">
            <summary>
            Get an XSD representation of the schema field definitions.
            </summary>
            <returns>The XSD root element.</returns>
            <remarks>
            The XSD representation can be used to set a Schema's <see cref="P:Tridion.ContentManager.ContentManagement.Schema.Xsd"/> property.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Schema.Xsd"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.Fields">
            <summary>
            Get access to the (content) field definitions.
            </summary>
            <value>
            A list of ItemFieldDefinition-derived objects. 
            This is a connected collection: changes to the collection are reflected in the state of the SchemaFields object.
            May be <c>null</c> if not applicable for the Schema (see remarks on the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.SchemaFields"/> class).
            </value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.MetadataFields"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.MetadataFields">
            <summary>
            Get access to the metadata field definitions.
            </summary>
            <value>
            A list of ItemFieldDefinition-derived objects. 
            This is a connected collection: changes to the collection are reflected in the state of the SchemaFields object.
            May be <c>null</c> if not applicable for the Schema (see remarks on the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.SchemaFields"/> class).
            </value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.SchemaFields.Fields"/>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.XhtmlFieldDefinition">
            <summary>
            Represents an XHTML field (a.k.a. Format Area) definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.XhtmlFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.XhtmlFieldDefinition.GetElementName">
            <summary>
            Get the XML element name for the field definition in the TridionWebSchema representation.
            </summary>
            <returns>The XML element local name.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.XhtmlFieldDefinition.Height">
            <summary>
            Get or set the height of the text area in the form-based User Interface.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.XhtmlFieldDefinition.DefaultValue">
            <summary>
            Get or set the default value.
            </summary>
            <value>
            A string containing the default value or <c>null</c> if no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.XhtmlFieldDefinition.FilterXslt">
            <summary>
            Get or set the Filter XSLT used by the CME.
            </summary>
            <value>
            The XSLT root element or <c>null</c> if no Filter XSLT is defined.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextFieldDefinition">
            <summary>
            Represents a multi-line text field definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextFieldDefinition.GetElementName">
            <summary>
            Get the XML element name for the field definition in the TridionWebSchema representation.
            </summary>
            <returns>The XML element local name.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextFieldDefinition.Height">
            <summary>
            Get or set the height of the text area in the form-based User Interface.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextFieldDefinition.DefaultValue">
            <summary>
            Get or set the default value.
            </summary>
            <value>
            A string containing the default value or <c>null</c> if no default value is defined.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.KeywordField">
            <summary>
            Represents a Keyword field.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.KeywordField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.KeywordField.ToString">
            <summary>
            Get a string representation of the object.
            </summary>
            <returns>
            A string representation of the field's value(s), separated by newline characters (if multiple).
            </returns>
            <remarks>
            The string representation is shown in a debugger.
            Avoid using it for other purposes; use the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.KeywordField.Value"/> or <see cref="P:Tridion.ContentManager.ContentManagement.Fields.KeywordField.Values"/> property instead.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.KeywordField.Value">
            <summary>
            Get or set the value of the (single-valued) field. 
            </summary>
            <value>
            A Keyword object representing the linked Keyword or <c>null</c> if the field doesn't have a value.
            </value>
            <remarks>
            If the field is multi-valued, getting this property yields the first value (or <c>null</c> if none).
            Setting this property reduces the number of values to one.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.KeywordField.Values"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.KeywordField.Values">
            <summary>
            Get access to the values of the (multi-valued) field.
            </summary>
            <value>
            A list of Keyword objects representing the linked Keywords. This is a connected collection: changes in the collection are reflected in the state of the field.
            </value>
            <remarks>
            If the field is single-valued, the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.KeywordField.Value"/> property can be used instead.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.KeywordField.Value"/>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ExternalLinkField">
            <summary>
            Represents an external link field.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.TextField">
            <summary>
            Abstract base class for fields with text content.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.TextField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.TextField.ToString">
            <summary>
            Get a string representation of the object.
            </summary>
            <returns>
            A string representation of the field's value(s), separated by newline characters (if multiple).
            </returns>
            <remarks>
            The string representation is shown in a debugger.
            Avoid using it for other purposes; use the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.TextField.Value"/> or <see cref="P:Tridion.ContentManager.ContentManagement.Fields.TextField.Values"/> property instead.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.TextField.Value">
            <summary>
            Get or set the value of the (single-valued) field. 
            </summary>
            <value>
            A string value or <c>null</c> if the field doesn't have a value.
            </value>
            <remarks>
            If the field is multi-valued, getting this property yields the first value (or <c>null</c> if none).
            Setting this property reduces the number of values to one.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.TextField.Values"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.TextField.Values">
            <summary>
            Get access to the values of the (multi-valued) field.
            </summary>
            <value>
            A list of string values. This is a connected collection: changes in the collection are reflected in the state of the field.
            </value>
            <remarks>
            If the field is single-valued, the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.TextField.Value"/> property can be used instead.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.TextField.Value"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ExternalLinkField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ListType">
            <summary>
            Specifies the type of list used to present allowed values for a field.
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.ListDefinition.Type"/>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.Fields.ListType.None">
            <summary>Don't present a list of allowed values.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.Fields.ListType.Select">
            <summary>Present a select list (or drop-down list if <see cref="P:Tridion.ContentManager.ContentManagement.Fields.ListDefinition.Height"/>=1)</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.Fields.ListType.Edit">
            <summary>Not used.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.Fields.ListType.Radio">
            <summary>Present radio buttons.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.Fields.ListType.Checkbox">
            <summary>Present check boxes.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.Fields.ListType.Tree">
            <summary>Present a tree (Taxonomy).</summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkField">
            <summary>
            Represents a Multimedia link field.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultimediaLinkField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.DateField">
            <summary>
            Represents a date field.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.DateField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.DateField.ToString">
            <summary>
            Get a string representation of the object.
            </summary>
            <returns>
            A string representation of the field's value(s), separated by newline characters (if multiple).
            </returns>
            <remarks>
            The string representation is shown in a debugger.
            Avoid using it for other purposes; use the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.DateField.Value"/> or <see cref="P:Tridion.ContentManager.ContentManagement.Fields.DateField.Values"/> property instead.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateField.Value">
            <summary>
            Get or set the value of the (single-valued) field. 
            </summary>
            <value>
            A DateTime value or <see cref="F:System.DateTime.MinValue"/> if the field doesn't have a value.
            </value>
            <remarks>
            If the field is multi-valued, getting this property yields the first value (or <see cref="F:System.DateTime.MinValue"/> if none).
            Setting this property reduces the number of values to one.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.DateField.Values"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.DateField.Values">
            <summary>
            Get access to the values of the (multi-valued) field.
            </summary>
            <value>
            A list of DateTime values. This is a connected collection: changes in the collection are reflected in the state of the field.
            </value>
            <remarks>
            If the field is single-valued, the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.DateField.Value"/> property can be used instead.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.DateField.Value"/>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition">
            <summary>
            Represents a single-line text field definition (in a Schema).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.#ctor(System.String)">
            <summary>
            Create a new instance with a given field name.
            </summary>
            <param name="name">The (XML) name of the field.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.GetElementName">
            <summary>
            Get the XML element name for the field definition in the TridionWebSchema representation.
            </summary>
            <returns>The XML element local name.</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.MinLength">
            <summary>
            Get or set the minimum length constraint.
            </summary>
            <value>
            A nullable integer value. If null, no minimum length constraint is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.MaxLength">
            <summary>
            Get or set the maximum length constraint.
            </summary>
            <value>
            A nullable integer value. If null, no maximum length constraint is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.DefaultValue">
            <summary>
            Get or set the default value.
            </summary>
            <value>
            A string containing the default value or <c>null</c> if no default value is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.Pattern">
            <summary>
            Get or set a regular expression pattern to constrain the value.
            </summary>
            <value>
            A string containing the (XSD) regular expression pattern or <c>null</c> if no pattern is defined.
            </value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition.List">
            <summary>
            Get access to the list of allowed values.
            </summary>
            <value>
            A SingleLineTextListDefinition object representing the list of allowed values.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextListDefinition">
            <summary>
            Provides information about whether/how to present a list of allowed single-line text field values.
            </summary>
            <seealso cref="T:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextFieldDefinition"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextListDefinition.Entries">
            <summary>
            Get access to the allowed values.
            </summary>
            <value>
            A list of strings representing the allowed values.
            This is a connected collection: changes to the collection are reflected in the state of the DateListDefinion object.
            </value>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.XhtmlField">
            <summary>
            Represents an XHTML field (a.k.a. Format Area).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.XhtmlField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextField">
            <summary>
            Represents a multi-line text field.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextField.TcmiNamespace">
            <summary>The namespace URI of the TCM System Schema for Instances.</summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.MultiLineTextField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextField">
            <summary>
            Represents a single-line text field.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.SingleLineTextField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.NumberField">
            <summary>
            Represents a number field.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.NumberField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.NumberField.ToString">
            <summary>
            Get a string representation of the object.
            </summary>
            <returns>
            A string representation of the field's value(s), separated by newline characters (if multiple).
            </returns>
            <remarks>
            The string representation is shown in a debugger.
            Avoid using it for other purposes; use the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberField.Value"/> or <see cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberField.Values"/> property instead.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberField.Value">
            <summary>
            Get or set the value of the (single-valued) field. 
            </summary>
            <value>
            A floating-point value or <c>0</c> if the field doesn't have a value.
            </value>
            <remarks>
            If the field is multi-valued, getting this property yields the first value (or <c>0</c> if none).
            Setting this property reduces the number of values to one.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberField.Values"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.NumberField.Values">
            <summary>
            Get access to the values of the (multi-valued) field.
            </summary>
            <value>
            A list of floating-point values. This is a connected collection: changes in the collection are reflected in the state of the field.
            </value>
            <remarks>
            If the field is single-valued, the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberField.Value"/> property can be used instead.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.NumberField.Value"/>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaField">
            <summary>
            Represents an embedded (schema) field.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaField.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on a given Schema field definition.
            </summary>
            <param name="schemaFieldElement">The XML element representing the Schema field definition.</param>
            <param name="session">The Session in which the object should be created.</param>
            <remarks>
            This constructor is normally called by <see cref="M:Tridion.ContentManager.ContentManagement.Fields.ItemField.CreateInstance(System.Xml.XmlElement,Tridion.ContentManager.Session)"/>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaField.Value">
            <summary>
            Get or set the value of the (single-valued) field. 
            </summary>
            <value>
            An ItemFields object representing the embedded fields or <c>null</c> if the field doesn't have a value.
            </value>
            <remarks>
            If the field is multi-valued, getting this property yields the first value (or <c>null</c> if none).
            Setting this property reduces the number of values to one.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaField.Values"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaField.Values">
            <summary>
            Get access to the values of the (multi-valued) field.
            </summary>
            <value>
            A list of ItemFields objects representing the embedded field sets. This is a connected collection: changes in the collection are reflected in the state of the field.
            </value>
            <remarks>
            If the field is single-valued, the <see cref="P:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaField.Value"/> property can be used instead.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Fields.EmbeddedSchemaField.Value"/>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields">
            <summary>
            Represents XML content/metadata as a set of fields.
            </summary>
            <remarks>
            Can be used to access the content of Components based on a Tridion Web Schema and custom Metadata.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Component.Content"/>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.VirtualFolder.Configuration"/>
            <seealso cref="P:Tridion.ContentManager.CommunicationManagement.Destination.ProtocolFields"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFields.#ctor(Tridion.ContentManager.ContentManagement.Schema)">
            <summary>
            Create an instance containing fields without values.
            </summary>
            <param name="schema">The <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> that defines the fields.</param>
            <remarks>
            If the Schema defines both content and metadata, the ItemFields object will represent the content fields.
            If the content is complex, an empty set is constructed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFields.#ctor(System.Xml.XmlElement,Tridion.ContentManager.ContentManagement.Schema)">
            <summary>
            Create an instance using field values based on given XML data.</summary>
            <param name="rootElement">An <see cref="T:System.Xml.XmlElement"/> representing the root element of the XML data.</param>
            <param name="schema">The <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> that defines the fields.</param>
            <remarks>
            The root element's namespace and local name must correspond with those defined in the Schema.
            If not, a <see cref="T:Tridion.ContentManager.KernelException"/> is thrown.
            If the content is complex, an empty set of fields is constructed.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFields.#ctor(System.String,System.String,System.Xml.XmlElement,System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Constructor. For internal use only.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFields.Contains(System.String)">
            <summary>
            Determine whether a field with a given name exists.
            </summary>
            <param name="fieldName">The field name (XML name as defined in the Schema) to test for.</param>
            <returns><c>true</c> is a field with the given name exists.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Fields.ItemFields.ToXml">
            <summary>
            Get the XML representation of the set of fields.
            </summary>
            <returns>The root element of the XML representation.</returns>
            <remarks>
            The XML representation can be used to set Component content or custom metadata XML.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Component.Content"/>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.RepositoryLocalObject.Metadata"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFields.Count">
            <summary>
            Get the number of fields.
            </summary>
            <remarks>
            All fields defined in the Schema are counted, whether or not they have a value.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFields.Item(System.String)">
            <summary>
            Get field by name (indexer).
            </summary>
            <param name="fieldName">The field name (XML name as defined in the Schema).</param>
            <returns>An <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemField"/>-derived object representing the field.</returns>
            <remarks>
            If no field with the given name exists, a <see cref="T:System.Collections.Generic.KeyNotFoundException"/> is thrown.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Fields.ItemFields.Item(System.Int32)">
            <summary>
            Get field by index (indexer).
            </summary>
            <param name="index">The zero-based index.</param>
            <returns>An <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemField"/>-derived object representing the field.</returns>
            <remarks>
            If the index is less than 0 or larger than the number fields, an <see cref="T:System.ArgumentOutOfRangeException"/> is thrown.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Folder">
            <summary>
            Represents a Folder: an item used to organize the items in a Repository.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Folder.
            </summary>
            <param name="session">The Session in which the Folder should be created.</param>
            <param name="parentId">The TCM URI of the Folder in which the Folder should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Folder.
            </summary>
            <param name="id">The identifier (TCM URI) of the Folder.</param>
            <param name="session">The Session in which the Folder should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Folder.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Folder.</param>
            <param name="session">The Session in which the Folder should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Folder.LinkedSchema">
            <summary>
            Get or set the linked Schema of the Folder.
            </summary>
            <value>A <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> object or <c>null</c> if the Folder doesn't have a linked Schema.</value>
            <remarks>
            The linked Schema acts as default Schema for Components created in the Folder.
            It can also acts as mandatory Schema, if <see cref="P:Tridion.ContentManager.ContentManagement.Folder.IsLinkedSchemaMandatory"/> is set to <c>true</c>.
            In the latter case, Components cannot be saved in the Folder unless they are based on this Schema.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Folder.IsLinkedSchemaMandatory"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Folder.IsLinkedSchemaMandatory">
            <summary>
            Get or set whether the linked Schema is mandatory.
            </summary>
            <remarks>
            If the linked Schema is not mandatory, it merely acts as a default Schema for new Components created in the Folder.
            If the linked Schema is mandatory, Components cannot be saved in the Folder unless they are based on this Schema.
            It is not possible make the linked Schema mandatory if there are Components in the Folder based on another Schema.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Keyword">
            <summary>
            Represents a Keyword used to classify items.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Keyword.
            </summary>
            <param name="session">The Session in which the Keyword should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Category"/> in which the Keyword should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Keyword.
            </summary>
            <param name="id">The identifier (TCM URI) of the Keyword.</param>
            <param name="session">The Session in which the Keyword should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Keyword.</param>
            <param name="session">The Session in which the Keyword should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetChildKeywords(Tridion.ContentManager.Filter)">
            <summary>
            Get the child Keywords of this Keyword.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>Abstract</term><description>Boolean specifying whether to include abstract Keywords.</description></item>
                <item><term>FromCategory</term><description>Only include Keywords from the given Category.</description></item>
            </list>
            </param>
            <returns>A list of Keyword objects.</returns>
            <remarks>
            Child Keywords are the inverse of parent Keywords.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Keyword.ParentKeywords"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetListChildKeywords(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetListChildKeywords(Tridion.ContentManager.Filter)">
            <summary>
            Get the child Keywords of this Keyword as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attributes to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetChildKeywords(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListKeywords).</returns>
            <remarks>
            Child Keywords are the inverse of parent Keywords.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.Keyword.ParentKeywords"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetChildKeywords(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetClassifiedItems(Tridion.ContentManager.Filter)">
            <summary>
            Get the items classified using this Keyword.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>ItemType</term><description>Only include objects of the given <see cref="T:Tridion.ContentManager.ItemType"/>(s).</description></item>
                <item><term>Descendant</term><description>Boolean specifying whether to include descendant Keywords.</description></item>
                <item><term>LimitResult</term><description>Limit the number of objects returned in the list to this number.</description></item>
                <item><term>ShowNewItems</term><description>Specifies whether to include new items (items that have not been checked-in yet).</description></item>
            </list>
            </param>
            <returns>A list of objects.</returns>
            <remarks>
            In item is considered to be classified using a Keyword if it links to the Keyword,
            typically through a Keyword field in its content or metadata. 
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetListClassifiedItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Keyword.GetListClassifiedItems(Tridion.ContentManager.Filter)">
            <summary>
            Get the items classified using this Keyword as XML.
            </summary>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attributes to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetClassifiedItems(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML list (tcm:ListItems).</returns>
            <remarks>
            In item is considered to be classified using a Keyword if it links to the Keyword,
            typically through a Keyword field in its content or metadata. 
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Keyword.GetClassifiedItems(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Keyword.Description">
            <summary>
            Get or set a description of the Keyword.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Keyword.IsAbstract">
            <summary>
            Get or set whether the Keyword is abstract.
            </summary>
            <remarks>
            An abstract Keyword cannot be used to classify items with. It is merely there to act
            as a parent for other Keywords.
            This property cannot be changed in a local copy.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Keyword.Key">
            <summary>
            Get or set a custom key for the Keyword.
            </summary>
            <remarks>
            This key can be used to identify a Keyword in custom code; it has no special meaning to the TCM system.  
            Unlike the Keyword's <see cref="P:Tridion.ContentManager.IdentifiableObject.Title"/>, this property cannot be changed in a local copy.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Keyword.ParentKeywords">
            <summary>
            Get access to the parent Keywords of this Keyword.
            </summary>
            <value>A collection of Keyword objects. This is a connected collection: changes to the collection are reflected in the object's state.</value>
            <remarks>
            Parent Keywords are used to form a Taxonomy of Keywords.
            Typically, a parent Keyword is a broader term/concept.
            The Parent Keywords must be from one of the allowed parent Categories of this Keyword's Category.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Keyword.RelatedKeywords">
            <summary>
            Get access to the Keywords related to this Keyword.
            </summary>
            <value>A collection of Keyword objects. This is a connected collection: changes to the collection are reflected in the object's state.</value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Keyword.IsRoot">
            <summary>
            Get whether the Keyword is a root Keyword (i.e. it has no parent Keywords).
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.MultimediaType">
            <summary>
            Represents Multimedia type: a type of binary content
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaType.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create an instance for a new Multimedia type.
            </summary>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.MultimediaType.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Multimedia type.
            </summary>
            <param name="id">The identifier (TCM URI) of the Multimedia type.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.MultimediaType.MimeType">
            <summary>
            Get or set the MIME type according to IETF RFC 2046.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.MultimediaType.FileExtensions">
            <summary>
            Get or set the file extensions associated with this Multimedia type.
            </summary>
            <remarks>
            File extensions must be unique across all Multimedia types.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.SearchBlueprintStatus">
            <summary>
            Specifies the Blueprint status to search for.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SearchBlueprintStatus.Unspecified">
            <summary>Don't search for a specific Blueprint status</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SearchBlueprintStatus.Local">
            <summary>Search for local items</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SearchBlueprintStatus.Localized">
            <summary>Search for localized items (a.k.a. local copies)</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SearchBlueprintStatus.Shared">
            <summary>Search for shared items</summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.SearchQuery">
            <summary>
            Represents a search query.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Query">
            <summary>
            Abstract base class for queries.
            </summary>
            <seealso cref="T:Tridion.ContentManager.ContentManagement.SearchQuery"/>
        </member>
        <member name="M:Tridion.ContentManager.Query.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create a new instance
            </summary>
            <param name="session">The Session in which to create the object.</param>
        </member>
        <member name="M:Tridion.ContentManager.Query.GetResults">
            <summary>
            Get the query results as a list of objects.
            </summary>
            <returns>A list of IdentifiableObject instances representing the query results.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Query.GetListResults">
            <summary>
            Get the query results as an XML list.
            </summary>
            <remarks>
            The structure of the XML list is defined for each concrete Query subclass.
            </remarks>
            <returns>The root element of the XML list.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Query.GetListResults(System.Int32,System.Int32)">
            <summary>
            Get a subset of the query results as an XML list.
            </summary>
            <param name="startRowIndex">The 0-based index of the first row to return.</param>
            <param name="maxRows">The maximum number of rows to return.</param>
            <remarks>
            The structure of the XML list is defined for each concrete Query subclass.
            </remarks>
            <returns>The root element of the XML list.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Query.ToXml">
            <summary>
            Obtain an XML representation of the query
            </summary>
            <remarks>
            The XML representation can be used, for instance, as configuration data for a Virtual Folder.
            </remarks>
            <returns>The root element of the XML representation</returns>
        </member>
        <member name="P:Tridion.ContentManager.Query.Session">
            <summary>
            Get the <see cref="P:Tridion.ContentManager.Query.Session"/> in which the Query is created.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.SearchQuery.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create an empty search query
            </summary>
            <param name="session">The Session in which to create the search query.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.SearchQuery.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create a search query from a given XML representation.
            </summary>
            <param name="searchInstruction">The XML representation of the query: see SearchInstruction element in cm_xml.xsd</param>
            <param name="session">The Session in which to create the search query.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.SearchQuery.GetListResults(System.Int32,System.Int32)">
            <summary>
            Get a subset of the query results as an XML list.
            </summary>
            <param name="startRowIndex">The 0-based index of the first row to return.</param>
            <param name="maxRows">The maximum number of rows to return.</param>
            <remarks>
            See element ListSearchResults in cm_xml.xsd for a definition of the XML list structure.
            </remarks>
            <returns>An XML element representing the root element of the XML list.</returns>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.SearchQuery.ToXml">
            <summary>
            Obtain an XML representation of the query
            </summary>
            <remarks>
            The XML representation can be used, for instance, as configuration data for a Virtual Folder.
            </remarks>
            <returns>An XML element which represents the root element of the XML representation</returns>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.ResultLimit">
            <summary>
            Get or set the limit on the number of search results returned.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.SearchIn">
            <summary>
            Get or set the search scope.
            </summary>
            <remarks>
            The following search scopes are supported:
            <list>
                <item>System wide: SearchIn = null</item>
                <item>Within a Repository/Publication: SearchIn = subclass of Repository</item>
                <item>Within an organizational item (one level): SearchIn = subclass of OrganizationalItem, SearchInSubtree = false</item>
                <item>Within a subtree: SearchIn = subclass of OrganizationalItem, SearchInSubtree = true</item>
            </list>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.SearchInSubtree">
            <summary>
            Get or set whether to search one level deep or within an entire subtree.
            </summary>
            <remarks>
            The following search scopes are supported:
            <list>
                <item>System wide: SearchIn = null</item>
                <item>Within a Repository/Publication: SearchIn = subclass of Repository</item>
                <item>Within an organizational item (one level): SearchIn = subclass of OrganizationalItem, SearchInSubtree = false</item>
                <item>Within a subtree: SearchIn = subclass of OrganizationalItem, SearchInSubtree = true</item>
            </list>
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.FullTextQuery">
            <summary>
            Get or set the Full-Text Query (VQL).
            </summary>
            <remarks>
            The Full Text Query is combined with the other specified criteria.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.Title">
            <summary>
            Get or set the text to search for in the item's title
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.IsTitleCaseSensitive"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.IsTitleCaseSensitive">
            <summary>
            Get or set whether the title should be sought case sensitive or not 
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.Title"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.Description">
            <summary>
            Get or set the text to search for in the item's description
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.IsDescriptionCaseSensitive"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.IsDescriptionCaseSensitive">
            <summary>
            Get or set whether the description should be sought case sensitive or not 
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.Title"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.Author">
            <summary>
            Get or set the author to search for
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.ItemTypes">
            <summary>
            Get the item types to search for
            </summary>
            <remarks>
            This is a connected collection: generic ICollection methods (Add, Remove, Clear) can be used
            to add/remove item types to the collection.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.UsedKeyword">
            <summary>
            Get or set the <see cref="T:Tridion.ContentManager.ContentManagement.Keyword"/> to search for.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.BasedOnSchema">
            <summary>
            Get or set the <see cref="T:Tridion.ContentManager.ContentManagement.Schema"/> to search for.
            </summary>
            <remarks>
            Only items (in particular: Components) based on the given Schema will be returned.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.XmlElementName">
            <summary>
            Get or set the (local) name of the XML element to search in.
            </summary>
            <remarks>
            This can only be used in conjunction with BasedOnSchema and XmlElementContent.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.BasedOnSchema"/>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.XmlElementContent"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.XmlElementContent">
            <summary>
            Get or set the content to search for within a given XML element
            </summary>
            <remarks>
            This can only be used in conjunction with BasedOnSchema and XmlElementName.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.BasedOnSchema"/>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.XmlElementName"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.BlueprintStatus">
            <summary>
            Get or set the Blueprint status to search for
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.FromRepository">
            <summary>
            Get or set the Repository from which the items should be inherited.
            </summary>
            <remarks>
            This can only be used in conjunction with BlueprintStatus
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.BlueprintStatus"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.ModifiedAfter">
            <summary>
            Get or set a lower limit on the modified date
            </summary>
            <remarks>
            Only items which are modified after the given date/time will be returned
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.ModifiedBefore"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.ModifiedBefore">
            <summary>
            Get or set an upper limit on the modified date
            </summary>
            <remarks>
            Only items which are modified before the given date/time will be returned.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.ModifiedAfter"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.LockType">
            <summary>
            Get or set the lock type to search for
            </summary>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.LockUser"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.LockUser">
            <summary>
            Get or set the user that must hold the lock.
            </summary>
            <remarks>
            This can only be used in conjunction with LockType.
            </remarks>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.SearchQuery.LockType"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.SearchQuery.IsPublished">
            <summary>
            Get or set whether the item must be published or not
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.LockType">
            <summary>
            Specifies how a (versioned) item is locked.
            </summary>
            <remarks>
            This is a set of flags. A combination of the values is possible.
            </remarks>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.LockType.None">
            <summary>The item is not locked.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.LockType.CheckedOut">
            <summary>The item is checked-out. This can mean either a temporary (edit) lock, a permanent lock (explicit check-out performed by user) or a workflow lock.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.LockType.Permanent">
            <summary>The item is permanently checked-out, i.e. using an explicit check-out action.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.LockType.NewItem">
            <summary>The item is a new item, i.e. it has been created, but not checked-in for the first time yet.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.LockType.InWorkflow">
            <summary>The item is in workflow.</summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.Schema">
            <summary>
            Represents a Schema defining the structure of content and/or metadata.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Schema.
            </summary>
            <param name="session">The Session in which the Schema should be created.</param>
            <param name="parentId">The TCM URI of the <see cref="T:Tridion.ContentManager.ContentManagement.Folder"/> in which the Schema should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Schema.
            </summary>
            <param name="id">The identifier (TCM URI) of the Schema.</param>
            <param name="session">The Session in which the Schema should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.Schema.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Schema.</param>
            <param name="session">The Session in which the Schema should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.MetadataSchema">
            <summary>
            Get or set the Schema for the (custom) metadata.
            </summary>
            <value>Always <c>null</c>, since a Schema cannot have custom metadata.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.Metadata">
            <summary>
            Get or set the (custom) metadata.
            </summary>
            <value>Always <c>null</c>, since a Schema cannot have custom metadata.</value>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.Description">
            <summary>
            Get or set a description for the Schema.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.Purpose">
            <summary>
            Get or set the purpose for the Schema.
            </summary>
            <remarks>
            A Schema can be used for a single purpose only.
            At the different places where Schemas can be selected, the set of available Schemas
            is filtered by the Schema's purpose.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.RootElementName">
            <summary>
            Get or set the name of the root element.
            </summary>
            <remarks>
            In a W3C Schema (XSD), it is possible to have multiple global elements, 
            i.e. elements that can act as root element.
            A Schema in Tridion Content Manager must identify a single global element as the root element.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.Xsd">
            <summary>
            Get or set the Schema content as XSD.
            </summary>
            <value>The root element of the XSD (xsd:schema).</value>
            <remarks>
            This property provides low-level access to the XSD.
            It is also possible to access the Schema content through the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.SchemaFields"/> API.
            For Tridion Web Schemas, this is possible for both the content and the metadata.
            For complex Schemas, this is only possible for the metadata.
            </remarks>
            <seealso cref="T:Tridion.ContentManager.ContentManagement.Fields.SchemaFields"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.IsTridionWebSchema">
            <summary>
            Determine whether the Schema qualifies as "Tridion Web Schema".
            </summary>
            <remarks>
            A "Tridion Web Schema" is a Schema for which the content model is simple enough to be
            represented as a set of fields.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.NamespaceUri">
            <summary>
            Get the namespace URI (target namespace) of the Schema. 
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.Schema.AllowedMultimediaTypes">
            <summary>
            Get access to the allowed Multimedia Types.
            </summary>
            <value>A list of MultimediaType objects. This is a connected collection: changes to the collection are reflected in the state of the MultimediaType.</value>
            <remarks>
            This property only applies to Schemas with purpose <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Multimedia"/>.
            It defines what the allowed Multimedia Types are for Multimedia Components based on this Schema.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.SchemaPurpose">
            <summary>
            Specifies the purpose of a Schema.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Component">
            <summary>Used to define the content and metadata of Components with XML content.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Multimedia">
            <summary>Used to define the content and metadata of Multimedia Components.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Embedded">
            <summary>Used for inclusion in other Schemas.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Metadata">
            <summary>Used to define the metadata of items (except for Components).</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.Protocol">
            <summary>Used to define the protocol fields of a publishing Destination.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.VirtualFolderType">
            <summary>Used to define the configuration data of a Virtual Folder.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.TemplateParameters">
            <summary>Used to define the parameters of a Template.</summary>
        </member>
        <member name="T:Tridion.ContentManager.ContentManagement.VirtualFolder">
            <summary>
            Represents a Virtual Folder: an Organizational Item that dynamically collects its contents.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.#ctor(Tridion.ContentManager.Session,Tridion.ContentManager.TcmUri)">
            <summary>
            Create an instance for a new Virtual Folder.
            </summary>
            <param name="session">The Session in which the Virtual Folder should be created.</param>
            <param name="parentId">The TCM URI of the Folder in which the Virtual Folder should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Virtual Folder.
            </summary>
            <param name="id">The identifier (TCM URI) of the Virtual Folder.</param>
            <param name="session">The Session in which the Virtual Folder should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.ContentManagement.VirtualFolder.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Virtual Folder.</param>
            <param name="session">The Session in which the Virtual Folder should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VirtualFolder.TypeSchema">
            <summary>
            Get or set the Schema for the configuration data.
            </summary>
            <value>A Schema object (purpose must be <see cref="F:Tridion.ContentManager.ContentManagement.SchemaPurpose.VirtualFolderType"/>)</value>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.VirtualFolder.Configuration"/>
        </member>
        <member name="P:Tridion.ContentManager.ContentManagement.VirtualFolder.Configuration">
            <summary>
            Get or set the configuration data.
            </summary>
            <value>The root element of the configuration data.</value>
            <remarks>
            This property provides low-level access to the XML configuration data.
            If the TypeSchema is based a Tridion Web Schema, it is possible to access the configuration data
            through the <see cref="T:Tridion.ContentManager.ContentManagement.Fields.ItemFields"/> API.
            </remarks>
            <example>
            To read a single configuration data field value with the ItemFields API:
            <code>
            VirtualFolder myVirtualFolder = (VirtualFolder)mySession.GetObject("tcm:1-9-8192");
            ItemFields configFields = new ItemFields(myVirtualFolder.Configuration, myVirtualFolder.TypeSchema);
            TextField myTextField = (TextField)configFields["MyTextFieldName"];
            string myTextFieldValue = myTextField.Value;
            </code>
            </example>
            <seealso cref="P:Tridion.ContentManager.ContentManagement.VirtualFolder.TypeSchema"/>
        </member>
        <member name="T:Tridion.ContentManager.InvalidIncludeException">
            <summary>
            The exception that is thrown when a Template script contains an invalid include statement.
            </summary>
            <remarks>
            The error code is always <see cref="F:Tridion.ContentManager.TcmErrorCode.InvalidInclude"/>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.InvalidIncludeException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.LogCategory)">
            <summary>
            Create a new instance of InvalidIncludeException.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="category">The logging category</param>
        </member>
        <member name="T:Tridion.ContentManager.InvalidUriException">
            <summary>
            The exception that is thrown if an invalid URI is encountered.
            </summary>
            <remarks>
            There are multiple reasons why a URI is considered invalid. 
            In all cases this exception is thrown, but with different error codes.
            <list type="table">
                <item><term><see cref="F:Tridion.ContentManager.TcmErrorCode.UnexpectedItemType"/></term><description>The TCM URI contains an item type which is not expected.</description></item>
                <item><term><see cref="F:Tridion.ContentManager.TcmErrorCode.InvalidURI"/></term><description>The URI is not a well-formed TCM URI.</description></item>
                <item><term><see cref="F:Tridion.ContentManager.TcmErrorCode.InvalidURL"/></term><description>The URI is not an existing WebDAV URL.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.InvalidUriException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory)">
            <summary>
            Create a new instance of InvalidUriException.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
        </member>
        <member name="M:Tridion.ContentManager.InvalidUriException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory,System.Exception)">
            <summary>
            Create a new instance of InvalidUriException with an inner exception.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
            <param name="inner">The inner exception</param>
        </member>
        <member name="T:Tridion.ContentManager.ItemDoesNotExistException">
            <summary>
            The exception that is thrown if a non-existent item is requested.
            </summary>
            <remarks>
            The error code is always <see cref="F:Tridion.ContentManager.TcmErrorCode.ItemDoesNotExist"/>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.ItemDoesNotExistException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.TcmErrorCode,Tridion.ContentManager.LogCategory)">
            <summary>
            Create a new instance of ItemDoesNotExistException.
            </summary>
            <param name="message">The localizable error message</param>
            <param name="errorCode">The error code</param>
            <param name="category">The logging category</param>
        </member>
        <member name="T:Tridion.ContentManager.Filter">
            <summary>
            Used to specify filter conditions, sort order and columns for query methods.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Filter.#ctor">
            <summary>
            Default constructor. Create an empty set of conditions, additional columns and sort expression. Use default set of base columns.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Filter.#ctor(Tridion.ContentManager.Filter)">
            <summary>
            Copy constructor.
            </summary>
            <param name="otherFilter">The filter to copy from.</param>
        </member>
        <member name="M:Tridion.ContentManager.Filter.EnsureInstance(Tridion.ContentManager.Filter@)">
            <summary>
            Ensure that the given Filter reference is not null.
            </summary>
            <param name="filter">The Filter reference which may be null. If so, it is changed to a new Filter instance.</param>
        </member>
        <member name="M:Tridion.ContentManager.Filter.GetRowFilterXml">
            <summary>
            Get the row filter XML representation as expected by the BL.
            </summary>
            <returns>A string containing the XML representation.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Filter.GetListColumnFilter">
            <summary>
            Get the TDSDefines.ListColumnFilter enumeration value as expected by the BL.
            </summary>
            <returns>
            The TDSDefines.ListColumnFilter enumeration value which is derived from
            both the <see cref="P:Tridion.ContentManager.Filter.BaseColumns"/> and <see cref="P:Tridion.ContentManager.Filter.AdditionalColumns"/>
            </returns>
        </member>
        <member name="P:Tridion.ContentManager.Filter.Conditions">
            <summary>
            Get or set the conditions (key/value pairs) used to filter the list. 
            </summary>
            <remarks>
            Conditions can be added, removed and queried using the generic IDictionary methods.
            Each method that takes a Filter as parameter defines a set of supported conditions.
            In general, the following data types can be used as value for a condition:
            <list type="bullet">
                <item>Simple data types (string, int, double, bool)</item>
                <item>DateTime</item>
                <item>Enumerations</item>
                <item>Identifiable objects</item>
                <item>Collections (arrays, non-generic collection, generic collections) of any of the above</item>
            </list>
            </remarks>
            <example><code>
            Filter filter = new Filter();
            filter.Conditions["ItemType"] = ItemType.Component;
            if (identifiableObject.HasUsingItems(filter)) ...
            </code></example>
        </member>
        <member name="P:Tridion.ContentManager.Filter.SortExpression">
            <summary>
            Get or set the sort expression. 
            </summary>
            <remarks>
            <para>Syntax of the sort expression: &lt;Column name&gt; [ASC|DESC]</para>
            Columns are sorted ascending by default. Multiple columns can be specified, separated by commas. 
            An empty string (the default value) means "default sorting": by title, ascending.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Filter.BaseColumns">
            <summary>
            Get or set which base columns (XML attributes) to include in the XML list.
            </summary>
            <remarks>
            The default value is <see cref="F:Tridion.ContentManager.ListBaseColumns.Default"/>.
            Which columns that are, depends on the list method for which the Filter is used.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Filter.AdditionalColumns">
            <summary>
            Get the collection of additional columns (XML attributes) to include in the XML list.
            </summary>
            <remarks>
            These are the names of optional columns (XML attributes) to include in the list.
            Which additional columns are supported depends on the list method for which the Filter is used.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.ListBaseColumns">
            <summary>
            Specifies which columns (XML attributes) to include in XML lists.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.ListBaseColumns.Id">
            <summary>Only the identifier (ID attribute)</summary>
        </member>
        <member name="F:Tridion.ContentManager.ListBaseColumns.IdAndTitle">
            <summary>Identifier (ID attribute) and display name (Title attribute)</summary>
        </member>
        <member name="F:Tridion.ContentManager.ListBaseColumns.Default">
            <summary>The default set of columns. Typically, this is the ID and Title attributes plus additional attributes depending on the kind of list. What these additional attributes are can be found in the system schema.</summary>
        </member>
        <member name="F:Tridion.ContentManager.ListBaseColumns.Extended">
            <summary>Same as <see cref="F:Tridion.ContentManager.ListBaseColumns.Default"/>, plus the following extended columns: IsPublished, IsShared, IsLocalized, SubType (for schemas: purpose, for template: template type), FileExt (file extension of multimedia data), Trustee (name of revisor). Only applies to ListItems.</summary>
        </member>
        <member name="T:Tridion.ContentManager.LoadFlags">
            <summary>
            Specifies how the XML representation of an <see cref="T:Tridion.ContentManager.IdentifiableObject"/> should be loaded.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.LoadFlags.None">
            <summary>
            Load in the default manner.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.LoadFlags.WebDavUrls">
            <summary>
            Load with WebDAV URLs instead of TCM URIs.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.LoadFlags.KeywordXlinks">
            <summary>
            Load with Keyword elements as XLink element (i.e. with the Keyword URI as xlink:href attribute)
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.LoadFlags.Expanded">
            <summary>
            Load a Tridion Web Schema with embedded fields expanded.
            Load a dynamic template with xsl:includes expanded.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.LogCategory">
            <summary>
            Specifies the category to be used for logging.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.MixedLanguagesException">
            <summary>
            The exception that is thrown when a Template script contains an include statement to a Template with a different <see cref="N:Tridion.ContentManager.TemplateTypes"/>.
            </summary>
            <remarks>
            The error code is always <see cref="F:Tridion.ContentManager.TcmErrorCode.MixedLanguages"/>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.MixedLanguagesException.#ctor(Tridion.Localization.LocalizableMessage,Tridion.ContentManager.LogCategory)">
            <summary>
            Create a new instance of MixedLanguagesException.
            </summary>
            <param name="message">The localizable error message.</param>
            <param name="category">The logging category.</param>
        </member>
        <member name="T:Tridion.ContentManager.PublishableAttribute">
            <summary>
            Specifies whether a class (and its subclasses) can be published.
            </summary>
            <remarks>
            The Publish Engine only accepts publishable classes.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.PublishableAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tridion.ContentManager.PublishableAttribute"/> class with the 
            <paramref name="isPublishable"/> value.
            </summary>
            <param name="isPublishable">A <see cref="T:System.Boolean"/> value that indicates whether
            the item can be published.</param>
        </member>
        <member name="P:Tridion.ContentManager.PublishableAttribute.IsPublishable">
            <summary>
            Gets the <see cref="T:System.Boolean"/> value that indicates whether
            the item can be published.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Security.Group">
            <summary>
            Represents a Group of Users.
            </summary>
        </member>
        <member name="T:Tridion.ContentManager.Security.Trustee">
            <summary>
            Abstract base class for "Trustees": Users or Groups
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create an instance for a new Trustee.
            </summary>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Trustee.
            </summary>
            <param name="id">The identifier (TCM URI) of the Trustee.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the object.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Trustee.GetTitlePropertyName">
            <summary>
            The Title property of a Trustee maps to the tcm:Name element in the XML.
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.Trustee.Description">
            <summary>
            Get or set the description (full name) of the Trustee
            </summary>
        </member>
        <member name="P:Tridion.ContentManager.Security.Trustee.IsPredefined">
            <summary>
            Get whether the trustee is predefined by the system.
            </summary>
            <remarks>
            Predefined Trustees cannot be deleted and may be suppressed from lists.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create an instance for a new Group.
            </summary>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Group.
            </summary>
            <param name="id">The identifier (TCM URI) of the Group.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.Group.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the Group.</param>
            <param name="session">The Session in which the Group should be created.</param>
        </member>
        <member name="T:Tridion.ContentManager.Security.User">
            <summary>
            Represents a User
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Security.User.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create an instance for a new User.
            </summary>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.User.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing User.
            </summary>
            <param name="id">The identifier (TCM URI) of the User.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Security.User.#ctor(System.Xml.XmlElement,Tridion.ContentManager.Session)">
            <summary>
            Create an instance based on an existing XML representation
            </summary>
            <param name="xmlRepresentation">The XML representation to be used as state of the User.</param>
            <param name="session">The Session in which the User should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.Security.User.IsEnabled">
            <summary>
            Get or set whether the User is enabled.
            </summary>
            <remarks>
            A user can only log in if his User account is enabled.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.User.LanguageId">
            <summary>
            Get or set the language of the User
            </summary>
            <remarks>
            The language ID (LCID) determines the language in which localizable text is displayed.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.User.LocaleId">
            <summary>
            Get or set the locale of the User
            </summary>
            <remarks>
            The locale ID (LCID) determines the formatting of date/time and numeric values.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Security.User.Privileges">
            <summary>
            Get or set the User's system-wide privileges
            </summary>
            <value>
            A bitmap of privilege value. Currently, only one privilege value has been defined:
            <list type="table">
                <item><term>1</term><description>System Administrator</description></item>
            </list>
            </value>
        </member>
        <member name="P:Tridion.ContentManager.Security.User.IsPrivilegesEditable">
            <summary>
            Get whether the privileges can be modified.
            </summary>
            <remarks>Only System Administrators can modify a User's privileges.</remarks>
        </member>
        <member name="T:Tridion.ContentManager.Session">
            <summary>
            Represents a session with the TCM system.
            </summary>
            <remarks>
            <para>This is the entry point to the TOM.NET API. It is used to retrieve existing objects
            and to create new system-wide objects.</para>
            <para>A Session is associated to only one user, but one user can have multiple concurrent Sessions.</para>
            <para>Because a Session holds on to "expensive" objects, it should be explicitly disposed if no longer needed.
            For that purpose, it implements <see cref="T:System.IDisposable"/>.</para>
            <para>IMPORTANT NOTE: Session objects are not thread-safe; you must not share Session objects across threads.
            Furthermore, the thread that creates a Session object should be in a Single Threaded Apartment (STA),
            since the Session will internally create an Apartment Threaded COM object. See <see cref="M:System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.#cctor">
            <summary>
            Class constructor (a.k.a. type initializer).
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Session.#ctor">
            <summary>
            Create a new Session instance for the current Windows user.
            </summary>
            <remarks>
            The current Windows user is determined using <see cref="M:System.Security.Principal.WindowsIdentity.GetCurrent"/>
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.#ctor(System.String)">
            <summary>
            Create a new Session instance for the given user name (using impersonation).
            </summary>
            <param name="userName">The account name of the user to impersonate.</param>
            <remarks>
            The current Windows user (determined using <see cref="M:System.Security.Principal.WindowsIdentity.GetCurrent"/>) 
            must be configured in TCM as an impersonation user.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.#ctor(Tridion.ContentManager.Interop.cm_sys.UserContext)">
            <summary>
            Create a new Session with the given user context (for internal use only).
            </summary>
            <param name="userContext">The UserContext object obtained from the BL.</param>
        </member>
        <member name="M:Tridion.ContentManager.Session.Finalize">
            <summary>
            Finalizer.
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Session.Dispose">
            <summary>
            Dispose the object, i.e. release "expensive" objects.
            </summary>
            <remarks>
            This method is part of the <see cref="T:System.IDisposable"/> interface.
            As such, it can be called either explicitly or implicity using the C# <c>using</c> statement.
            </remarks>
            <example><code>
            using (Session mySession = new Session())
            {
                // do something with mySession
            } // mySession no longer needed, its Dispose method will be called by the compiler.
            </code></example>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetNewObject``1">
            <summary>
            Get a new system-wide object of the given type.
            </summary>
            <typeparam name="T">The type of object to get. Must be a subtype of <see cref="T:Tridion.ContentManager.SystemWideObject"/>.</typeparam>
            <returns>An instance of the given type representing a new object (i.e. it doesn't exist in the database yet).</returns>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetNewRootOrganizationalItem``1"/>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.OrganizationalItem.GetNewObject``1"/>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetObject(System.String)">
            <summary>
            Get an object for the given URI.
            </summary>
            <param name="uri">The URI. Can be either a TCM URI or a WebDAV URL representing a TCM object.</param>
            <returns>An object representing the item or <c>null</c> if the URI is tcm:0-0-0</returns>
            <remarks>
            Multiple subsequent calls with the same URI will return different instances.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.ContentManagement.Repository.GetObject(System.String)"/>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetObject(System.Xml.XmlElement)">
            <summary>
            Get an object for the given XLink element.
            </summary>
            <param name="linkElement">An XLink element, i.e. an XML element with an <c>xlink:href</c> and optionally an <c>xlink:title</c> attribute.</param>
            <returns>An object representing the item or <c>null</c> if the URI is tcm:0-0-0</returns>
            <remarks>
            The <c>xlink:href</c> attribute can contain either a TCM URI or a WebDAV URL representing a TCM object.
            If an <c>xlink:title</c> attribute is present and not empty, its value is used to pre-load a title.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.IsExistingObject(System.String)">
            <summary>
            Determine whether a given URI refers to an existing object.
            </summary>
            <param name="uri">The URI to test. Can be either a TCM URI or a WebDAV URL representing a TCM object.</param>
            <returns><c>true</c> if the URI refers to an existing object.</returns>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetObjects``1(Tridion.ContentManager.Filter)">
            <summary>Get a system-wide list of objects.</summary>
            <typeparam name="T">The type of objects to get. Must be a concrete subtype of <see cref="T:Tridion.ContentManager.IdentifiableObject"/>:
            <list type="bullet">
                <item><see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/></item>
                <item><see cref="T:Tridion.ContentManager.ContentManagement.MultimediaType"/></item>
                <item><see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/></item>
                <item><see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget"/></item>
                <item><see cref="T:Tridion.ContentManager.CommunicationManagement.TargetType"/></item>
                <item><see cref="T:Tridion.ContentManager.Security.User"/></item>
                <item><see cref="T:Tridion.ContentManager.Security.Group"/></item>
                <item><see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/></item>
                <item>Any concrete subtype of <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/></item>
            </list>
            </typeparam>
            <param name="filter">
            Can be used to filter the items based on conditions. The following conditions are supported:
            <list type="table">
                <item><term>ItemType</term><description>Only return items with the given item type(s)</description></item>
                <item><term>LockUser</term><description>Only return items locked by the given user. Only applies to versionable objects.</description></item>
            </list>
            </param>
            <returns>A list of objects of the requested type.</returns>
            <remarks>
            A typical use case for this method is to get a list of system-wide objects (e.g. Publications).
            However, it can also be used to get a system-wide list of repository-local objects (e.g. all checked-out items).
            Note that for such a system-wide list of repository-local objects, a "LockUser" condition must be specified in R5.3.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.Session.GetList(System.Type,Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetList(System.Type,Tridion.ContentManager.Filter)">
            <summary>Get a system-wide list of objects as XML.</summary>
            <param name="objectType">The type of objects to get. Must be a concrete subtype of <see cref="T:Tridion.ContentManager.IdentifiableObject"/>:
            <list type="bullet">
                <item><see cref="T:Tridion.ContentManager.Workflow.ApprovalStatus"/></item>
                <item><see cref="T:Tridion.ContentManager.ContentManagement.MultimediaType"/></item>
                <item><see cref="T:Tridion.ContentManager.CommunicationManagement.Publication"/></item>
                <item><see cref="T:Tridion.ContentManager.CommunicationManagement.PublicationTarget"/></item>
                <item><see cref="T:Tridion.ContentManager.CommunicationManagement.TargetType"/></item>
                <item><see cref="T:Tridion.ContentManager.Security.User"/></item>
                <item><see cref="T:Tridion.ContentManager.Security.Group"/></item>
                <item><see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/></item>
                <item>Any concrete subtype of <see cref="T:Tridion.ContentManager.ContentManagement.RepositoryLocalObject"/></item>
            </list>
            </param>
            <param name="filter">
            Can be used to filter the items based on conditions and specify which attribute to include in the list.
            See the filter parameter of <see cref="M:Tridion.ContentManager.Session.GetObjects``1(Tridion.ContentManager.Filter)"/> for a description of supported conditions.
            </param>
            <returns>The root element of the XML List (element name depends of the type of object requested).</returns>
            <remarks>
            A typical use case for this method is to get a list of system-wide objects (e.g. Publications).
            However, it can also be used to get a system-wide list of repository-local objects (e.g. all checked-out items).
            Note that for such a system-wide list of repository-local objects, a "LockUser" condition must be specified in R5.3.
            </remarks>
            <seealso cref="M:Tridion.ContentManager.Session.GetObjects``1(Tridion.ContentManager.Filter)"/>
        </member>
        <member name="M:Tridion.ContentManager.Session.GetBLObject(System.String,System.Boolean)">
            <summary>
            Get a Business Logic object.
            </summary>
            <param name="className">The name of the class (excluding BL or BLST suffixes).</param>
            <param name="transactional">Indicates whether a transactional BL class is required.</param>
            <returns>An object that can perform the Business Logic and supports the expected interfaces.</returns>
            <remarks>
            This method is mainly for internal use. It can be overridden in a subclass to support unit testing using mock BL objects.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.ReleaseBLObject(System.Object)">
            <summary>
            Release the reference to a Business Logic object.
            </summary>
            <param name="blObject">The BL object reference to release.</param>
            <remarks>
            This method is mainly for internal use. It can be overridden in a subclass to support unit testing using mock BL objects.
            </remarks>
        </member>
        <member name="M:Tridion.ContentManager.Session.Dispose(System.Boolean)">
            <summary>
            Release all "expensive" objects. Part of Dispose pattern implementation.
            </summary>
            <param name="disposing">Indicates whether this method is called from the Dispose method or the finalizer.</param>
            <remarks>According to MS guidelines, it should be allowed to call Dispose multiple times.</remarks>
        </member>
        <member name="P:Tridion.ContentManager.Session.ApiVersion">
            <summary>
            Get the API version.
            </summary>
            <value>
            Syntax: {MajorVersion}.{MinorVersion}.{ServicePack}
            </value>
            <remarks>
            Typically, the API itself does not change for Service Packs, but system behavior
            may change (i.e. be corrected) and therefore the Service Pack number is included.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Session.Cache">
            <summary>
            Get or set the cache used by this Session.
            </summary>
            <remarks>
            As soon as the Cache property is set, all objects used in the Session will be put in the cache
            and the Session will try to obtain objects from the cache.
            A single cache can be shared by multiple Session objects.
            The lifetime of a cache may be longer or shorter that the lifetime of a Session.
            If the Cache property is set to <c>null</c>, the Session will stop caching.
            </remarks>
            <seealso cref="T:Tridion.ContentManager.ICache"/>
            <seealso cref="T:Tridion.ContentManager.Caching.SimpleCache"/>
        </member>
        <member name="P:Tridion.ContentManager.Session.User">
            <summary>
            Get the User for which the Session was created.
            </summary>
            <remarks>
            If impersonation has been used, this will be the impersonated user.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.TcmErrorCode">
            <summary>Error codes used in TridionException-derived exceptions</summary>
            <remarks>
            The numeric values correspond to the error codes as defined in TDSDefines, minus 0x80040000.
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.Workflow.ApprovalStatus">
            <summary>
            Represents an Approval Status
            </summary>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatus.#ctor(Tridion.ContentManager.Session)">
            <summary>
            Create an instance for a new Approval Status.
            </summary>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="M:Tridion.ContentManager.Workflow.ApprovalStatus.#ctor(Tridion.ContentManager.TcmUri,Tridion.ContentManager.Session)">
            <summary>
            Create an instance for an existing Approval Status.
            </summary>
            <param name="id">The identifier (TCM URI) of the Approval Status.</param>
            <param name="session">The Session in which the object should be created.</param>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ApprovalStatus.Position">
            <summary>
            Get or set the position of this Approval Status in the list of Approval Statuses.
            </summary>
            <remarks>
            The list of Approval Statuses is ordered, because Publication Targets can have a
            <see cref="P:Tridion.ContentManager.CommunicationManagement.PublicationTarget.MinApprovalStatus"/>:
            Approval Statuses with a Position lower than this minimal approval status won't be publishable.
            </remarks>
        </member>
        <member name="P:Tridion.ContentManager.Workflow.ApprovalStatus.IsDeleted">
            <summary>
            Get whether the Approval Status is deleted.
            </summary>
            <remarks>
            If an Approval Status is deleted, it is not physically removed, but only flagged as deleted
            (and therefore suppressed from the list of Approval Statuses).
            </remarks>
        </member>
        <member name="T:Tridion.ContentManager.XmlSections">
            <summary>
            Specifies which parts of an object's XML representation to retrieve.
            </summary>
        </member>
        <member name="F:Tridion.ContentManager.XmlSections.All">
            <summary>All sections</summary>
        </member>
        <member name="F:Tridion.ContentManager.XmlSections.Context">
            <summary>The context section (tcm:Context element)</summary>
        </member>
        <member name="F:Tridion.ContentManager.XmlSections.Info">
            <summary>The info section (tcm:Info element)</summary>
        </member>
        <member name="F:Tridion.ContentManager.XmlSections.Data">
            <summary>The data section (tcm:Data element)</summary>
        </member>
        <member name="F:Tridion.ContentManager.XmlSections.Permissions">
            <summary>The permissions section (tcm:Permissions element)</summary>
        </member>
    </members>
</doc>
